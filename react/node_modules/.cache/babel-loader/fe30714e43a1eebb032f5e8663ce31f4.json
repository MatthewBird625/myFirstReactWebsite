{"ast":null,"code":"var _jsxFileName = \"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/Post.js\",\n    _s = $RefreshSig$();\n\nimport { Button } from \"react-bootstrap\";\nimport Card from \"react-bootstrap/Card\";\nimport \"../Assets/CSS/Post.css\";\nimport { deletePost, deleteComments, getUser } from \"../data/repository\";\nimport { useState } from \"react\";\nimport Comments from \"./Comments\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = props => {\n  _s();\n\n  const postDelete = async id => {\n    const deleteId = {\n      id: id\n    };\n    deleteComments(deleteId);\n    deletePost(deleteId);\n  };\n\n  let buttons = /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 17\n  }, this);\n\n  const [isUserPost, setIsUserPost] = useState(false);\n\n  if (props.postData.userEmail === getUser().email) {\n    setIsUserPost(true);\n    Buttons = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n        className: \"post-button\",\n        variant: \"primary\",\n        children: \"edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          postDelete(props.postData.post_id);\n        },\n        className: \"post-button\",\n        variant: \"danger\",\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"post\",\n    children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n      variant: \"top\",\n      src: \"https://picsum.photos/200/100\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        className: \"post-username\",\n        children: props.postData.userEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        className: \"post-text\",\n        children: props.postData.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Comments, {\n      postId: props.postData.post_id,\n      currentUser: props.currentUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Post, \"oiYqyt/qgmXAU8BMfe26OJgy5CE=\");\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["Button","Card","deletePost","deleteComments","getUser","useState","Comments","Post","props","postDelete","id","deleteId","buttons","isUserPost","setIsUserPost","postData","userEmail","email","Buttons","post_id","text","currentUser"],"sources":["/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/Post.js"],"sourcesContent":["import { Button } from \"react-bootstrap\";\nimport Card from \"react-bootstrap/Card\";\nimport \"../Assets/CSS/Post.css\";\nimport { deletePost, deleteComments, getUser } from \"../data/repository\";\nimport { useState } from \"react\";\n\nimport Comments from \"./Comments\";\n\nconst Post = (props) => {\n  const postDelete = async (id) => {\n    const deleteId = { id: id };\n    deleteComments(deleteId);\n    deletePost(deleteId);\n  };\n  let buttons = <div></div>;\n  const [isUserPost, setIsUserPost] = useState(false);\n\n  if (props.postData.userEmail === getUser().email) {\n    setIsUserPost(true);\n    Buttons = (\n      <div>\n        {\" \"}\n        <Button className=\"post-button\" variant=\"primary\">\n          edit\n        </Button>\n        <Button\n          onClick={() => {\n            postDelete(props.postData.post_id);\n          }}\n          className=\"post-button\"\n          variant=\"danger\"\n        >\n          delete\n        </Button>\n      </div>\n    );\n  }\n\n  return (\n    <Card className=\"post\">\n      {/* points to a random photo for now. Will be updated with the picture from the back end when implemented */}\n      <Card.Img variant=\"top\" src=\"https://picsum.photos/200/100\" />\n      <Card.Body>\n        <Card.Title className=\"post-username\">\n          {props.postData.userEmail}\n        </Card.Title>\n        <Card.Text className=\"post-text\">{props.postData.text}</Card.Text>\n      </Card.Body>\n\n      <Comments\n        postId={props.postData.post_id}\n        currentUser={props.currentUser}\n      ></Comments>\n      <Card.Body></Card.Body>\n    </Card>\n  );\n};\n\nexport default Post;\n"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,iBAAvB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAO,wBAAP;AACA,SAASC,UAAT,EAAqBC,cAArB,EAAqCC,OAArC,QAAoD,oBAApD;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;EAAA;;EACtB,MAAMC,UAAU,GAAG,MAAOC,EAAP,IAAc;IAC/B,MAAMC,QAAQ,GAAG;MAAED,EAAE,EAAEA;IAAN,CAAjB;IACAP,cAAc,CAACQ,QAAD,CAAd;IACAT,UAAU,CAACS,QAAD,CAAV;EACD,CAJD;;EAKA,IAAIC,OAAO,gBAAG;IAAA;IAAA;IAAA;EAAA,QAAd;;EACA,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,KAAD,CAA5C;;EAEA,IAAIG,KAAK,CAACO,QAAN,CAAeC,SAAf,KAA6BZ,OAAO,GAAGa,KAA3C,EAAkD;IAChDH,aAAa,CAAC,IAAD,CAAb;IACAI,OAAO,gBACL;MAAA,WACG,GADH,eAEE,QAAC,MAAD;QAAQ,SAAS,EAAC,aAAlB;QAAgC,OAAO,EAAC,SAAxC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAKE,QAAC,MAAD;QACE,OAAO,EAAE,MAAM;UACbT,UAAU,CAACD,KAAK,CAACO,QAAN,CAAeI,OAAhB,CAAV;QACD,CAHH;QAIE,SAAS,EAAC,aAJZ;QAKE,OAAO,EAAC,QALV;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAiBD;;EAED,oBACE,QAAC,IAAD;IAAM,SAAS,EAAC,MAAhB;IAAA,wBAEE,QAAC,IAAD,CAAM,GAAN;MAAU,OAAO,EAAC,KAAlB;MAAwB,GAAG,EAAC;IAA5B;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,IAAD,CAAM,IAAN;MAAA,wBACE,QAAC,IAAD,CAAM,KAAN;QAAY,SAAS,EAAC,eAAtB;QAAA,UACGX,KAAK,CAACO,QAAN,CAAeC;MADlB;QAAA;QAAA;QAAA;MAAA,QADF,eAIE,QAAC,IAAD,CAAM,IAAN;QAAW,SAAS,EAAC,WAArB;QAAA,UAAkCR,KAAK,CAACO,QAAN,CAAeK;MAAjD;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAUE,QAAC,QAAD;MACE,MAAM,EAAEZ,KAAK,CAACO,QAAN,CAAeI,OADzB;MAEE,WAAW,EAAEX,KAAK,CAACa;IAFrB;MAAA;MAAA;MAAA;IAAA,QAVF,eAcE,QAAC,IAAD,CAAM,IAAN;MAAA;MAAA;MAAA;IAAA,QAdF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CAhDD;;GAAMd,I;;KAAAA,I;AAkDN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}