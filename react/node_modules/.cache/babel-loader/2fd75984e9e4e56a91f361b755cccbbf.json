{"ast":null,"code":"var _jsxFileName = \"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/pages/Feed.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport Post from \"../components/Post\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getPosts } from \"../data/repository\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Feed = props => {\n  _s();\n\n  const navigate = useNavigate();\n  const [posts, setPosts] = useState();\n  useEffect(() => {\n    if (props.login !== true) {\n      navigate(\"/\");\n    }\n  }, []);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const result = await getPosts();\n      setPosts(result);\n    };\n\n    fetchPosts().catch(console.error);\n    console.log(posts);\n  }, []);\n  const [comments, setComments] = useState(localStorage.getItem(\"comments\") ? JSON.parse(localStorage.getItem(\"comments\")) : []); //temporary front end PK generator for posts until back end is implemented\n\n  const [postCount, setPostCount] = useState(localStorage.getItem(\"postCount\") ? JSON.parse(localStorage.getItem(\"postCount\")) : 0);\n  useEffect(() => {\n    localStorage.setItem(\"postCount\", postCount.toString());\n  }, [postCount]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: 10,\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Your feed:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Feed, \"G7XAbmGnoGzz+RN9OBY9b/Ql/gA=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Feed;\nexport default Feed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"names":["useState","useEffect","Col","Row","Post","useNavigate","getPosts","Feed","props","navigate","posts","setPosts","login","fetchPosts","result","catch","console","error","log","comments","setComments","localStorage","getItem","JSON","parse","postCount","setPostCount","setItem","toString"],"sources":["/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/pages/Feed.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport Post from \"../components/Post\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getPosts } from \"../data/repository\";\n\nconst Feed = (props) => {\n  const navigate = useNavigate();\n  const [posts, setPosts] = useState();\n\n  useEffect(() => {\n    if (props.login !== true) {\n      navigate(\"/\");\n    }\n  }, []);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const result = await getPosts();\n      setPosts(result);\n    };\n    fetchPosts().catch(console.error);\n    console.log(posts);\n  }, []);\n\n  const [comments, setComments] = useState(\n    localStorage.getItem(\"comments\")\n      ? JSON.parse(localStorage.getItem(\"comments\"))\n      : []\n  );\n\n  //temporary front end PK generator for posts until back end is implemented\n  const [postCount, setPostCount] = useState(\n    localStorage.getItem(\"postCount\")\n      ? JSON.parse(localStorage.getItem(\"postCount\"))\n      : 0\n  );\n\n  useEffect(() => {\n    localStorage.setItem(\"postCount\", postCount.toString());\n  }, [postCount]);\n\n  return (\n    <div>\n      <Row>\n        <Col></Col>\n        {/* CENTER COLUMN */}\n        <Col sm={10} md={8}>\n          <h1>Your feed:</h1>\n\n          {/* {posts.map((post) => (\n            <Post\n              setPostCount={setPostCount}\n              postCount={postCount}\n              postData={post}\n              comments={comments}\n              setComments={setComments}\n              currentUser={props.currentUser}\n            />\n          ))} */}\n        </Col>\n        <Col></Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default Feed;\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,oBAAzB;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;EAAA;;EACtB,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;EACA,MAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,EAAlC;EAEAC,SAAS,CAAC,MAAM;IACd,IAAIO,KAAK,CAACI,KAAN,KAAgB,IAApB,EAA0B;MACxBH,QAAQ,CAAC,GAAD,CAAR;IACD;EACF,CAJQ,EAIN,EAJM,CAAT;EAMAR,SAAS,CAAC,MAAM;IACd,MAAMY,UAAU,GAAG,YAAY;MAC7B,MAAMC,MAAM,GAAG,MAAMR,QAAQ,EAA7B;MACAK,QAAQ,CAACG,MAAD,CAAR;IACD,CAHD;;IAIAD,UAAU,GAAGE,KAAb,CAAmBC,OAAO,CAACC,KAA3B;IACAD,OAAO,CAACE,GAAR,CAAYR,KAAZ;EACD,CAPQ,EAON,EAPM,CAAT;EASA,MAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CACtCqB,YAAY,CAACC,OAAb,CAAqB,UAArB,IACIC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADJ,GAEI,EAHkC,CAAxC,CAnBsB,CAyBtB;;EACA,MAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4B1B,QAAQ,CACxCqB,YAAY,CAACC,OAAb,CAAqB,WAArB,IACIC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADJ,GAEI,CAHoC,CAA1C;EAMArB,SAAS,CAAC,MAAM;IACdoB,YAAY,CAACM,OAAb,CAAqB,WAArB,EAAkCF,SAAS,CAACG,QAAV,EAAlC;EACD,CAFQ,EAEN,CAACH,SAAD,CAFM,CAAT;EAIA,oBACE;IAAA,uBACE,QAAC,GAAD;MAAA,wBACE,QAAC,GAAD;QAAA;QAAA;QAAA;MAAA,QADF,eAGE,QAAC,GAAD;QAAK,EAAE,EAAE,EAAT;QAAa,EAAE,EAAE,CAAjB;QAAA,uBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAHF,eAiBE,QAAC,GAAD;QAAA;QAAA;QAAA;MAAA,QAjBF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAuBD,CA3DD;;GAAMlB,I;UACaF,W;;;KADbE,I;AA6DN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}