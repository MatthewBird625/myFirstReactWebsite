{"ast":null,"code":"var _jsxFileName = \"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/Post.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport \"../Assets/CSS/Post.css\";\nimport { deletePost, deleteComments, getUser } from \"../data/repository\";\nimport { Form, Button } from \"react-bootstrap\";\nimport Comments from \"./Comments\";\nimport { updatePost } from \"../data/repository\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = props => {\n  _s();\n\n  const [editMode, setEditMode] = useState(false);\n  const [defaultFormContent, setDefaultFormContent] = useState(props.postData.text);\n  const [form, setForm] = useState({\n    content: props.postData.text,\n    email: getUser().email,\n    postId: props.postData.post_id\n  }); //API CALLS\n\n  const postDelete = async id => {\n    const deleteId = {\n      id: id\n    };\n    await deleteComments(deleteId);\n    await deletePost(deleteId);\n    props.reloadPosts();\n  };\n\n  const submitEditPost = async event => {\n    event.preventDefault();\n    console.log(\"submitting edit\");\n    await updatePost(form);\n    props.reloadPosts();\n    toggleEditMode();\n  }; //CONDITIONAL RENDERING OF EDIT BUTTONS BASED ON IF IT IS USERS POST\n\n\n  const toggleEditMode = () => {\n    if (editMode === false) {\n      setEditMode(true);\n    } else {\n      setEditMode(false);\n    }\n  };\n\n  let button = /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 16\n  }, this);\n\n  if (props.postData.userEmail === getUser().email) button = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        toggleEditMode();\n      },\n      className: \"post-button\",\n      variant: \"primary\",\n      children: \"edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        postDelete(props.postData.post_id);\n      },\n      className: \"post-button\",\n      variant: \"danger\",\n      children: \"delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n\n  const handleChange = field => event => {\n    setForm(form => ({ ...form,\n      [field]: event.target.value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"post\",\n    children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n      variant: \"top\",\n      src: \"https://picsum.photos/640/480\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        className: \"post-username\",\n        children: props.postData.userEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), !editMode && /*#__PURE__*/_jsxDEV(Card.Text, {\n        className: \"post-text\",\n        children: props.postData.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), editMode && /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicontent\",\n          value: form.content,\n          onChange: handleChange(\"content\"),\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            rows: \"5\",\n            type: \"text\",\n            placeholder: \"\",\n            defaultValue: form.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"text-muted\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n          className: \"\",\n          variant: \"primary\",\n          type: \"submit\",\n          onClick: submitEditPost,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"\",\n          variant: \"secondary\",\n          type: \"\",\n          onClick: toggleEditMode,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), !editMode && button, /*#__PURE__*/_jsxDEV(Comments, {\n      postId: props.postData.post_id,\n      currentUser: props.currentUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Post, \"yIxKML/DYRWPLhgTLkskiB/UvgE=\");\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["useState","Card","deletePost","deleteComments","getUser","Form","Button","Comments","updatePost","Post","props","editMode","setEditMode","defaultFormContent","setDefaultFormContent","postData","text","form","setForm","content","email","postId","post_id","postDelete","id","deleteId","reloadPosts","submitEditPost","event","preventDefault","console","log","toggleEditMode","button","userEmail","handleChange","field","target","value","currentUser"],"sources":["/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/Post.js"],"sourcesContent":["import { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport \"../Assets/CSS/Post.css\";\nimport { deletePost, deleteComments, getUser } from \"../data/repository\";\nimport { Form, Button } from \"react-bootstrap\";\nimport Comments from \"./Comments\";\nimport { updatePost } from \"../data/repository\";\n\nconst Post = (props) => {\n  const [editMode, setEditMode] = useState(false);\n  const [defaultFormContent, setDefaultFormContent] = useState(\n    props.postData.text\n  );\n  const [form, setForm] = useState({\n    content: props.postData.text,\n    email: getUser().email,\n    postId: props.postData.post_id,\n  });\n\n  //API CALLS\n  const postDelete = async (id) => {\n    const deleteId = { id: id };\n    await deleteComments(deleteId);\n    await deletePost(deleteId);\n    props.reloadPosts();\n  };\n\n  const submitEditPost = async (event) => {\n    event.preventDefault();\n    console.log(\"submitting edit\");\n    await updatePost(form);\n    props.reloadPosts();\n    toggleEditMode();\n  };\n\n  //CONDITIONAL RENDERING OF EDIT BUTTONS BASED ON IF IT IS USERS POST\n  const toggleEditMode = () => {\n    if (editMode === false) {\n      setEditMode(true);\n    } else {\n      setEditMode(false);\n    }\n  };\n  let button = <div></div>;\n  if (props.postData.userEmail === getUser().email)\n    button = (\n      <div>\n        {\" \"}\n        <Button\n          onClick={() => {\n            toggleEditMode();\n          }}\n          className=\"post-button\"\n          variant=\"primary\"\n        >\n          edit\n        </Button>\n        <Button\n          onClick={() => {\n            postDelete(props.postData.post_id);\n          }}\n          className=\"post-button\"\n          variant=\"danger\"\n        >\n          delete\n        </Button>\n      </div>\n    );\n  const handleChange = (field) => (event) => {\n    setForm((form) => ({ ...form, [field]: event.target.value }));\n  };\n\n  return (\n    <Card className=\"post\">\n      {/* points to a random photo for now. Will be updated with the picture from the back end when implemented */}\n      <Card.Img variant=\"top\" src=\"https://picsum.photos/640/480\" />\n      <Card.Body>\n        <Card.Title className=\"post-username\">\n          {props.postData.userEmail}\n        </Card.Title>\n        {!editMode && (\n          <Card.Text className=\"post-text\">{props.postData.text}</Card.Text>\n        )}\n        {editMode && (\n          <Form>\n            <Form.Group\n              className=\"mb-3\"\n              controlId=\"formBasicontent\"\n              value={form.content}\n              onChange={handleChange(\"content\")}\n            >\n              <Form.Label></Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                rows=\"5\"\n                type=\"text\"\n                placeholder=\"\"\n                defaultValue={form.content}\n              />\n              <Form.Text className=\"text-muted\"></Form.Text>\n            </Form.Group>{\" \"}\n            <Button\n              className=\"\"\n              variant=\"primary\"\n              type=\"submit\"\n              onClick={submitEditPost}\n            >\n              Submit\n            </Button>\n            <Button\n              className=\"\"\n              variant=\"secondary\"\n              type=\"\"\n              onClick={toggleEditMode}\n            >\n              Submit\n            </Button>\n          </Form>\n        )}\n      </Card.Body>\n      {!editMode && button}\n\n      <Comments\n        postId={props.postData.post_id}\n        currentUser={props.currentUser}\n      ></Comments>\n      <Card.Body></Card.Body>\n    </Card>\n  );\n};\n\nexport default Post;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}