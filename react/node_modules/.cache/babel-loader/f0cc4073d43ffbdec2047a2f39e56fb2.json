{"ast":null,"code":"var _jsxFileName = \"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/s3482450-a1/src/components/RegisterForm.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport { Form, Button, Row, Col, Alert } from \"react-bootstrap\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport \"./Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterForm = props => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  const emailRef = useRef(null);\n  const passRef = useRef(null);\n  const nameRef = useRef(null); //   email regex from : https://emailregex.com/\n\n  const EMAIL_REGEX = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/; //   password regex from: https://www.thepolyglotdeveloper.com/2015/05/use-regex-to-test-password-strength-in-javascript/\n\n  const PASS_REGEX = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})\");\n\n  const handleSubmit = e => {\n    setError(\"\");\n    e.preventDefault();\n\n    if (name.length < 1) {\n      setError(\"insert a name!\");\n      return;\n    }\n\n    if (!EMAIL_REGEX.test(email)) {\n      setError(\"incorrect email format!\");\n      return;\n    }\n\n    if (!PASS_REGEX.test(password)) {\n      setError(\"password must be at least 8 characters, contain at least one numeric digit, one special character, one uppercase and one lowercase letter\");\n      return;\n    }\n\n    registerUser(name, email, password);\n    navigate(\"/loginForm\");\n  };\n\n  const registerUser = (name, email, password) => {\n    localStorage.setItem(\"name\", name);\n    localStorage.setItem(\"email\", email);\n    localStorage.setItem(\"password\", password);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \", /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicName\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"john smith\",\n          ref: nameRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\",\n          children: \"name goes here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicEmail\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"email@email.com\",\n          ref: emailRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\",\n          children: \"your email and Soul belongs to the Lan corperation from now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          ref: passRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\",\n          children: \"password must be at least 8 characters- praise LAN.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"button-bigger\",\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n              className: \"button-bigger\",\n              variant: \"secondary\",\n              type: \"submit\",\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterForm, \"zl4rq/nDpe7S8tkN8+hIfqEoiHY=\", false, function () {\n  return [useNavigate];\n});\n\n_c = RegisterForm;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["useRef","useState","Form","Button","Row","Col","Alert","Link","useNavigate","RegisterForm","props","email","setEmail","password","setPassword","name","setName","error","setError","navigate","emailRef","passRef","nameRef","EMAIL_REGEX","PASS_REGEX","RegExp","handleSubmit","e","preventDefault","length","test","registerUser","localStorage","setItem","target","value"],"sources":["/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/s3482450-a1/src/components/RegisterForm.js"],"sourcesContent":["import { useRef, useState } from \"react\";\nimport { Form, Button, Row, Col, Alert} from \"react-bootstrap\";\nimport { Link,  useNavigate } from \"react-router-dom\";\nimport \"./Login.css\";\nconst RegisterForm = (props) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const navigate = useNavigate();\n\n  const emailRef = useRef(null);\n  const passRef=  useRef(null);\n  const nameRef = useRef(null);\n\n\n\n  //   email regex from : https://emailregex.com/\n\n  const EMAIL_REGEX =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n//   password regex from: https://www.thepolyglotdeveloper.com/2015/05/use-regex-to-test-password-strength-in-javascript/\n\n  \n    const PASS_REGEX =  new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})\");\n\n\n  const handleSubmit = (e) => {\n    setError(\"\");\n\n    e.preventDefault();\n    if(name.length <1 ){\n        setError(\"insert a name!\");\n        return;\n\n    }\n    if (!EMAIL_REGEX.test(email)) {\n      setError(\"incorrect email format!\");\n      \n      return;\n    }\n \n    if (!PASS_REGEX.test(password)) {\n  \n      setError(\"password must be at least 8 characters, contain at least one numeric digit, one special character, one uppercase and one lowercase letter\");\n      return;\n    }\n\n    registerUser(name,email,password);\n    navigate(\"/loginForm\")\n\n\n  };\n\n  const registerUser = (name, email, password)=>{\n \n    localStorage.setItem(\"name\", name);\n    localStorage.setItem(\"email\", email);\n    localStorage.setItem(\"password\", password);\n  \n  }\n\n  return (\n    <div>\n      {\" \"}\n      <Form onSubmit= {handleSubmit}>\n      <Form.Group\n          className=\"mb-3\"\n          controlId=\"formBasicName\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          \n        >\n          <Form.Label>Name</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"john smith\" ref= {nameRef} />\n          <Form.Text className=\"text-muted\">\n            name goes here\n          </Form.Text>\n        </Form.Group>\n        <Form.Group\n          className=\"mb-3\"\n          controlId=\"formBasicEmail\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        >\n          <Form.Label>Email address</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"email@email.com\" ref= {emailRef}/>\n          <Form.Text className=\"text-muted\">\n            your email and Soul belongs to the Lan corperation from now\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            ref = {passRef}\n          />\n          <Form.Text className=\"text-muted\">\n            password must be at least 8 characters- praise LAN.\n          </Form.Text>\n        </Form.Group>\n\n        <Row>\n          <Col>\n            <Button className=\"button-bigger\" variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n          </Col>\n          <Col>\n           <Link to= \"/\"> <Button className=\"button-bigger\" variant=\"secondary\" type=\"submit\">\n              Back\n            </Button>\n            </Link>\n          </Col>\n        </Row>\n        {error && <Alert variant=\"danger\">{error}</Alert>}\n      </Form>\n    </div>\n  );\n};\n\nexport default RegisterForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}