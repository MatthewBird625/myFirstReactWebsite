{"ast":null,"code":"var _jsxFileName = \"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/pages/Feed.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport Post from \"../components/Post\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getPosts } from \"../data/repository\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Feed = props => {\n  _s();\n\n  const navigate = useNavigate();\n  const [posts, setPosts] = useState(\"\");\n  const [isLoadingPosts, setIsLoadingPosts] = useState(true);\n  const [reload, setReload] = useState(false);\n  useEffect(() => {\n    if (props.login !== true) {\n      navigate(\"/\");\n    }\n  }, []);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const result = await getPosts();\n      setPosts(result);\n      setIsLoadingPosts(false);\n    };\n\n    fetchPosts().catch(console.error);\n    console.log(\"loading posts\");\n  }, [isLoadingPosts]);\n\n  const reloadThePostsData = () => {\n    console.log(\"TOGGLE\");\n\n    if (isLoadingPosts === false) {\n      setIsLoadingPosts(true);\n    } else {\n      setIsLoadingPosts(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: 10,\n        md: 8,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Your feed:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), isLoadingPosts ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading posts...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this) : posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-muted\",\n          children: \"No posts have been submitted.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this) : posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n          currentUser: props.currentUser,\n          reloadThePostsData: reloadThePostsData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Feed, \"2/3w4pkcdQl3f1AmKjPyg039DFg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Feed;\nexport default Feed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"names":["useState","useEffect","Col","Row","Post","useNavigate","getPosts","Feed","props","navigate","posts","setPosts","isLoadingPosts","setIsLoadingPosts","reload","setReload","login","fetchPosts","result","catch","console","error","log","reloadThePostsData","length","map","post","currentUser"],"sources":["/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/pages/Feed.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport Post from \"../components/Post\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getPosts } from \"../data/repository\";\n\nconst Feed = (props) => {\n  const navigate = useNavigate();\n  const [posts, setPosts] = useState(\"\");\n  const [isLoadingPosts, setIsLoadingPosts] = useState(true);\n  const [reload, setReload] = useState(false);\n\n  useEffect(() => {\n    if (props.login !== true) {\n      navigate(\"/\");\n    }\n  }, []);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const result = await getPosts();\n\n      setPosts(result);\n      setIsLoadingPosts(false);\n    };\n    fetchPosts().catch(console.error);\n    console.log(\"loading posts\");\n  }, [isLoadingPosts]);\n\n  const reloadThePostsData = () => {\n    console.log(\"TOGGLE\");\n    if (isLoadingPosts === false) {\n      setIsLoadingPosts(true);\n    } else {\n      setIsLoadingPosts(false);\n    }\n  };\n  return (\n    <div>\n      <Row>\n        <Col></Col>\n        {/* CENTER COLUMN */}\n        <Col sm={10} md={8}>\n          <h1>Your feed:</h1>\n          {/* loading control logic below is based on lab08- registration and login example forum file */}\n          {isLoadingPosts ? (\n            <div>Loading posts...</div>\n          ) : posts.length === 0 ? (\n            <span className=\"text-muted\">No posts have been submitted.</span>\n          ) : (\n            posts.map((post) => (\n              <Post\n                currentUser={props.currentUser}\n                reloadThePostsData={reloadThePostsData}\n              />\n            ))\n          )}\n        </Col>\n        <Col></Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default Feed;\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,oBAAzB;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;EAAA;;EACtB,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;EACA,MAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACY,cAAD,EAAiBC,iBAAjB,IAAsCb,QAAQ,CAAC,IAAD,CAApD;EACA,MAAM,CAACc,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,KAAD,CAApC;EAEAC,SAAS,CAAC,MAAM;IACd,IAAIO,KAAK,CAACQ,KAAN,KAAgB,IAApB,EAA0B;MACxBP,QAAQ,CAAC,GAAD,CAAR;IACD;EACF,CAJQ,EAIN,EAJM,CAAT;EAMAR,SAAS,CAAC,MAAM;IACd,MAAMgB,UAAU,GAAG,YAAY;MAC7B,MAAMC,MAAM,GAAG,MAAMZ,QAAQ,EAA7B;MAEAK,QAAQ,CAACO,MAAD,CAAR;MACAL,iBAAiB,CAAC,KAAD,CAAjB;IACD,CALD;;IAMAI,UAAU,GAAGE,KAAb,CAAmBC,OAAO,CAACC,KAA3B;IACAD,OAAO,CAACE,GAAR,CAAY,eAAZ;EACD,CATQ,EASN,CAACV,cAAD,CATM,CAAT;;EAWA,MAAMW,kBAAkB,GAAG,MAAM;IAC/BH,OAAO,CAACE,GAAR,CAAY,QAAZ;;IACA,IAAIV,cAAc,KAAK,KAAvB,EAA8B;MAC5BC,iBAAiB,CAAC,IAAD,CAAjB;IACD,CAFD,MAEO;MACLA,iBAAiB,CAAC,KAAD,CAAjB;IACD;EACF,CAPD;;EAQA,oBACE;IAAA,uBACE,QAAC,GAAD;MAAA,wBACE,QAAC,GAAD;QAAA;QAAA;QAAA;MAAA,QADF,eAGE,QAAC,GAAD;QAAK,EAAE,EAAE,EAAT;QAAa,EAAE,EAAE,CAAjB;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,EAGGD,cAAc,gBACb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADa,GAEXF,KAAK,CAACc,MAAN,KAAiB,CAAjB,gBACF;UAAM,SAAS,EAAC,YAAhB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADE,GAGFd,KAAK,CAACe,GAAN,CAAWC,IAAD,iBACR,QAAC,IAAD;UACE,WAAW,EAAElB,KAAK,CAACmB,WADrB;UAEE,kBAAkB,EAAEJ;QAFtB;UAAA;UAAA;UAAA;QAAA,QADF,CARJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF,eAmBE,QAAC,GAAD;QAAA;QAAA;QAAA;MAAA,QAnBF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAyBD,CAxDD;;GAAMhB,I;UACaF,W;;;KADbE,I;AA0DN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}