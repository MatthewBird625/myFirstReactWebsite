{"ast":null,"code":"var _jsxFileName = \"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/Comments.js\",\n    _s = $RefreshSig$();\n\nimport { ListGroupItem, ListGroup } from \"react-bootstrap\";\nimport { useEffect, useState } from \"react\";\nimport { getComments } from \"../data/repository\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = props => {\n  _s();\n\n  const [postComments, setPostComments] = useState(\"\");\n  const [loadingComments, setLoadingComments] = useState(true);\n  useEffect(() => {\n    const fetchComments = async () => {\n      const result = await getComments(props.postId);\n      setPostComments(result);\n      console.log(result);\n      setLoadingComments(false);\n    };\n\n    fetchComments().catch(console.error);\n  }, [props.reload]);\n  useEffect(() => {\n    const fetchComments = async () => {\n      const result = await getComments(props.postId);\n      setPostComments(result);\n      console.log(result);\n      setLoadingComments(false);\n    };\n\n    fetchComments().catch(console.error);\n  }, [props.reload]);\n  return /*#__PURE__*/_jsxDEV(ListGroup, {\n    className: \"list-group-flush\",\n    children: loadingComments ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"loading comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : postComments.map(comment => /*#__PURE__*/_jsxDEV(ListGroupItem, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [comment.userEmail, \": \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this), comment.text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comments, \"HFzVrH4obRGeV5ZLjLgEkieE1gg=\");\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["ListGroupItem","ListGroup","useEffect","useState","getComments","Comments","props","postComments","setPostComments","loadingComments","setLoadingComments","fetchComments","result","postId","console","log","catch","error","reload","map","comment","userEmail","text"],"sources":["/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/Comments.js"],"sourcesContent":["import { ListGroupItem, ListGroup } from \"react-bootstrap\";\nimport { useEffect, useState } from \"react\";\n\nimport { getComments } from \"../data/repository\";\n\nconst Comments = (props) => {\n  const [postComments, setPostComments] = useState(\"\");\n  const [loadingComments, setLoadingComments] = useState(true);\n\n  useEffect(() => {\n    const fetchComments = async () => {\n      const result = await getComments(props.postId);\n\n      setPostComments(result);\n      console.log(result);\n      setLoadingComments(false);\n    };\n    fetchComments().catch(console.error);\n  }, [props.reload]);\n\n  useEffect(() => {\n    const fetchComments = async () => {\n      const result = await getComments(props.postId);\n\n      setPostComments(result);\n      console.log(result);\n      setLoadingComments(false);\n    };\n    fetchComments().catch(console.error);\n  }, [props.reload]);\n\n  return (\n    <ListGroup className=\"list-group-flush\">\n      {loadingComments ? (\n        <p>loading comments</p>\n      ) : (\n        postComments.map((comment) => (\n          <ListGroupItem>\n            <p>\n              <strong>{comment.userEmail}: </strong>\n              {comment.text}\n            </p>\n          </ListGroupItem>\n        ))\n      )}\n    </ListGroup>\n  );\n};\n\nexport default Comments;\n"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,QAAyC,iBAAzC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,SAASC,WAAT,QAA4B,oBAA5B;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;EAAA;;EAC1B,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM,CAACM,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAAC,IAAD,CAAtD;EAEAD,SAAS,CAAC,MAAM;IACd,MAAMS,aAAa,GAAG,YAAY;MAChC,MAAMC,MAAM,GAAG,MAAMR,WAAW,CAACE,KAAK,CAACO,MAAP,CAAhC;MAEAL,eAAe,CAACI,MAAD,CAAf;MACAE,OAAO,CAACC,GAAR,CAAYH,MAAZ;MACAF,kBAAkB,CAAC,KAAD,CAAlB;IACD,CAND;;IAOAC,aAAa,GAAGK,KAAhB,CAAsBF,OAAO,CAACG,KAA9B;EACD,CATQ,EASN,CAACX,KAAK,CAACY,MAAP,CATM,CAAT;EAWAhB,SAAS,CAAC,MAAM;IACd,MAAMS,aAAa,GAAG,YAAY;MAChC,MAAMC,MAAM,GAAG,MAAMR,WAAW,CAACE,KAAK,CAACO,MAAP,CAAhC;MAEAL,eAAe,CAACI,MAAD,CAAf;MACAE,OAAO,CAACC,GAAR,CAAYH,MAAZ;MACAF,kBAAkB,CAAC,KAAD,CAAlB;IACD,CAND;;IAOAC,aAAa,GAAGK,KAAhB,CAAsBF,OAAO,CAACG,KAA9B;EACD,CATQ,EASN,CAACX,KAAK,CAACY,MAAP,CATM,CAAT;EAWA,oBACE,QAAC,SAAD;IAAW,SAAS,EAAC,kBAArB;IAAA,UACGT,eAAe,gBACd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADc,GAGdF,YAAY,CAACY,GAAb,CAAkBC,OAAD,iBACf,QAAC,aAAD;MAAA,uBACE;QAAA,wBACE;UAAA,WAASA,OAAO,CAACC,SAAjB;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,EAEGD,OAAO,CAACE,IAFX;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAJJ;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD,CA1CD;;GAAMjB,Q;;KAAAA,Q;AA4CN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}