{"ast":null,"code":"var _jsxFileName = \"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/Post.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport \"../Assets/CSS/Post.css\";\nimport { deletePost, deleteComments, getUser } from \"../data/repository\";\nimport { Form, Button } from \"react-bootstrap\";\nimport Comments from \"./Comments\";\nimport { updatePost } from \"../data/repository\";\nimport Reaction from \"./Reaction\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.bubble.css\";\nimport \"../Assets/CSS/Post.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = props => {\n  _s();\n\n  const [editMode, setEditMode] = useState(false); //stores the default form content for resetting form content if the user cancels the edit mode\n\n  const [defaultFormContent, setDefaultFormContent] = useState(props.postData.text); //value for React Quill box\n\n  const [value, setValue] = useState(props.postData.text);\n  const [form, setForm] = useState({\n    content: props.postData.text,\n    email: getUser().email,\n    postId: props.postData.post_id\n  });\n  useEffect(() => {\n    const updatePostEffect = async () => {\n      const result = await updatePost(form);\n    };\n\n    updatePostEffect();\n  }, [form]); //API CALLS\n\n  const postDelete = async id => {\n    const deleteId = {\n      id: id\n    };\n    await deleteComments(deleteId);\n    await deletePost(deleteId);\n    props.reloadPosts();\n  };\n\n  const submitEditPost = async event => {\n    event.preventDefault();\n    setForm({ ...form,\n      content: value\n    });\n    console.log(\"submitting edit\");\n    setDefaultFormContent(form.content);\n    toggleEditMode();\n    props.reloadPosts();\n  }; //CONDITIONAL RENDERING OF EDIT BUTTONS BASED ON IF IT IS USERS POST\n\n\n  const toggleEditMode = () => {\n    form.content = defaultFormContent;\n\n    if (editMode === false) {\n      setEditMode(true);\n    } else {\n      setEditMode(false);\n    }\n  };\n\n  let button = /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 16\n  }, this);\n\n  if (props.postData.userEmail === getUser().email) button = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        toggleEditMode();\n      },\n      className: \"post-button\",\n      variant: \"primary\",\n      children: \"edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        postDelete(props.postData.post_id);\n      },\n      className: \"post-button\",\n      variant: \"danger\",\n      children: \"delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 7\n  }, this);\n\n  const handleChange = field => event => {\n    setForm(form => ({ ...form,\n      [field]: event.target.value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"post feed-background\",\n    children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n      className: \"post-image\",\n      variant: \"top\",\n      src: \"https://picsum.photos/640/480\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      className: \"post-user-content\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        className: \"post-username\",\n        children: props.postData.userEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), !editMode && /*#__PURE__*/_jsxDEV(ReactQuill, {\n        className: \"post-text\",\n        value: props.postData.text,\n        onChange: setValue,\n        theme: \"bubble\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), editMode && /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicontent\",\n          value: form.content,\n          onChange: handleChange(\"content\"),\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n            theme: \"snow\",\n            value: value,\n            onChange: setValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"text-muted\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n          className: \"post-button\",\n          variant: \"primary\",\n          type: \"submit\",\n          onClick: submitEditPost,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"post-button\",\n          variant: \"secondary\",\n          type: \"\",\n          onClick: toggleEditMode,\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Reaction, {\n      postId: props.postData.post_id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), !editMode && button, /*#__PURE__*/_jsxDEV(Comments, {\n      postId: props.postData.post_id,\n      currentUser: props.currentUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Post, \"uOUz4xPWy5I801za6N7hDylgzNw=\");\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["useState","useEffect","Card","deletePost","deleteComments","getUser","Form","Button","Comments","updatePost","Reaction","ReactQuill","Post","props","editMode","setEditMode","defaultFormContent","setDefaultFormContent","postData","text","value","setValue","form","setForm","content","email","postId","post_id","updatePostEffect","result","postDelete","id","deleteId","reloadPosts","submitEditPost","event","preventDefault","console","log","toggleEditMode","button","userEmail","handleChange","field","target","currentUser"],"sources":["/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/Post.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport \"../Assets/CSS/Post.css\";\nimport { deletePost, deleteComments, getUser } from \"../data/repository\";\nimport { Form, Button } from \"react-bootstrap\";\nimport Comments from \"./Comments\";\nimport { updatePost } from \"../data/repository\";\nimport Reaction from \"./Reaction\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.bubble.css\";\nimport \"../Assets/CSS/Post.css\";\n\nconst Post = (props) => {\n  const [editMode, setEditMode] = useState(false);\n\n  //stores the default form content for resetting form content if the user cancels the edit mode\n  const [defaultFormContent, setDefaultFormContent] = useState(\n    props.postData.text\n  );\n\n  //value for React Quill box\n  const [value, setValue] = useState(props.postData.text);\n\n  const [form, setForm] = useState({\n    content: props.postData.text,\n    email: getUser().email,\n    postId: props.postData.post_id,\n  });\n\n  useEffect(() => {\n    const updatePostEffect = async () => {\n      const result = await updatePost(form);\n    };\n    updatePostEffect();\n  }, [form]);\n\n  //API CALLS\n  const postDelete = async (id) => {\n    const deleteId = { id: id };\n    await deleteComments(deleteId);\n    await deletePost(deleteId);\n    props.reloadPosts();\n  };\n\n  const submitEditPost = async (event) => {\n    event.preventDefault();\n    setForm({ ...form, content: value });\n\n    console.log(\"submitting edit\");\n    setDefaultFormContent(form.content);\n    toggleEditMode();\n    props.reloadPosts();\n  };\n\n  //CONDITIONAL RENDERING OF EDIT BUTTONS BASED ON IF IT IS USERS POST\n  const toggleEditMode = () => {\n    form.content = defaultFormContent;\n    if (editMode === false) {\n      setEditMode(true);\n    } else {\n      setEditMode(false);\n    }\n  };\n  let button = <div></div>;\n  if (props.postData.userEmail === getUser().email)\n    button = (\n      <div>\n        {\" \"}\n        <Button\n          onClick={() => {\n            toggleEditMode();\n          }}\n          className=\"post-button\"\n          variant=\"primary\"\n        >\n          edit\n        </Button>\n        <Button\n          onClick={() => {\n            postDelete(props.postData.post_id);\n          }}\n          className=\"post-button\"\n          variant=\"danger\"\n        >\n          delete\n        </Button>\n      </div>\n    );\n  const handleChange = (field) => (event) => {\n    setForm((form) => ({ ...form, [field]: event.target.value }));\n  };\n\n  return (\n    <Card className=\"post feed-background\">\n      {/* points to a random photo for now. Will be updated with the picture from the back end when implemented */}\n      <Card.Img\n        className=\"post-image\"\n        variant=\"top\"\n        src=\"https://picsum.photos/640/480\"\n      />\n      <Card.Body className=\"post-user-content\">\n        <Card.Title className=\"post-username\">\n          {props.postData.userEmail}\n        </Card.Title>\n        {!editMode && (\n          <ReactQuill\n            className=\"post-text\"\n            value={props.postData.text}\n            onChange={setValue}\n            theme={\"bubble\"}\n          />\n        )}\n\n        {editMode && (\n          <Form>\n            <Form.Group\n              className=\"mb-3\"\n              controlId=\"formBasicontent\"\n              value={form.content}\n              onChange={handleChange(\"content\")}\n            >\n              <Form.Label></Form.Label>\n              <ReactQuill theme=\"snow\" value={value} onChange={setValue} />\n              <Form.Text className=\"text-muted\"></Form.Text>\n            </Form.Group>{\" \"}\n            <Button\n              className=\"post-button\"\n              variant=\"primary\"\n              type=\"submit\"\n              onClick={submitEditPost}\n            >\n              Submit\n            </Button>\n            <Button\n              className=\"post-button\"\n              variant=\"secondary\"\n              type=\"\"\n              onClick={toggleEditMode}\n            >\n              Back\n            </Button>\n          </Form>\n        )}\n      </Card.Body>\n      <Reaction postId={props.postData.post_id} />\n      {!editMode && button}\n\n      <Comments\n        postId={props.postData.post_id}\n        currentUser={props.currentUser}\n      ></Comments>\n      <Card.Body></Card.Body>\n    </Card>\n  );\n};\n\nexport default Post;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}