{"ast":null,"code":"var _jsxFileName = \"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/Comments.js\",\n    _s = $RefreshSig$();\n\nimport { ListGroupItem, ListGroup } from \"react-bootstrap\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { Row, Alert } from \"react-bootstrap\";\nimport { Button } from \"react-bootstrap\";\nimport Form from \"react-bootstrap/Form\";\nimport { getComments } from \"../data/repository\";\nimport { createComment } from \"../data/repository\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = props => {\n  _s();\n\n  //variables\n  const [comment, setComment] = useState({\n    content: \"\",\n    userEmail: props.currentUser,\n    postId: props.post_id\n  });\n  const [postComments, setPostComments] = useState(\"\");\n  const [loadingComments, setLoadingComments] = useState(true);\n  const [reload, setReload] = useState(false);\n  const commentRef = useRef(null);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\"); //effects\n\n  useEffect(() => {\n    const fetchComments = async () => {\n      const result = await getComments(props.postId);\n      setPostComments(result);\n      console.log(result);\n      setLoadingComments(false);\n    };\n\n    fetchComments().catch(console.error);\n  }, [reload]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(\"\");\n\n    if (comment.content.length < 1 || comment.content.length > 250) {\n      setError(\"comments must be between 1 and 250 characters\");\n      return;\n    }\n\n    try {\n      console.log(comment);\n      createComment(comment);\n      setSuccess(\"comment posted!\"); // props.reloadThePostsData();\n\n      if (reload === false) {\n        setReload(true);\n      } else {\n        setReload(false);\n      }\n    } catch {\n      setError(\"failed to post comment!\");\n    }\n  };\n\n  const handleChange = field => event => {\n    setComment(comment => ({ ...comment,\n      [field]: event.target.value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ListGroup, {\n      className: \"list-group-flush\",\n      children: loadingComments ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"loading comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this) : postComments.map(comment => /*#__PURE__*/_jsxDEV(ListGroupItem, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [comment.userEmail, \": \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this), comment.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \" leave a comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicontent\",\n        value: comment.content,\n        onChange: handleChange(\"content\"),\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          rows: \"5\",\n          type: \"text\",\n          placeholder: \"\",\n          ref: commentRef,\n          value: comment.content,\n          onChange: handleChange,\n          reload: reload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"button\",\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 19\n      }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"success\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comments, \"fjdU/QriVFvGQuJke19E1QeXN30=\");\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["ListGroupItem","ListGroup","useEffect","useState","useRef","Row","Alert","Button","Form","getComments","createComment","Comments","props","comment","setComment","content","userEmail","currentUser","postId","post_id","postComments","setPostComments","loadingComments","setLoadingComments","reload","setReload","commentRef","error","setError","success","setSuccess","fetchComments","result","console","log","catch","handleSubmit","e","preventDefault","length","handleChange","field","event","target","value","map","text"],"sources":["/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/Comments.js"],"sourcesContent":["import { ListGroupItem, ListGroup } from \"react-bootstrap\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { Row, Alert } from \"react-bootstrap\";\nimport { Button } from \"react-bootstrap\";\nimport Form from \"react-bootstrap/Form\";\nimport { getComments } from \"../data/repository\";\nimport { createComment } from \"../data/repository\";\n\nconst Comments = (props) => {\n  //variables\n  const [comment, setComment] = useState({\n    content: \"\",\n    userEmail: props.currentUser,\n    postId: props.post_id,\n  });\n  const [postComments, setPostComments] = useState(\"\");\n  const [loadingComments, setLoadingComments] = useState(true);\n  const [reload, setReload] = useState(false);\n  const commentRef = useRef(null);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  //effects\n  useEffect(() => {\n    const fetchComments = async () => {\n      const result = await getComments(props.postId);\n\n      setPostComments(result);\n      console.log(result);\n      setLoadingComments(false);\n    };\n    fetchComments().catch(console.error);\n  }, [reload]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    setError(\"\");\n    if (comment.content.length < 1 || comment.content.length > 250) {\n      setError(\"comments must be between 1 and 250 characters\");\n      return;\n    }\n    try {\n      console.log(comment);\n      createComment(comment);\n      setSuccess(\"comment posted!\");\n\n      // props.reloadThePostsData();\n      if (reload === false) {\n        setReload(true);\n      } else {\n        setReload(false);\n      }\n    } catch {\n      setError(\"failed to post comment!\");\n    }\n  };\n\n  const handleChange = (field) => (event) => {\n    setComment((comment) => ({ ...comment, [field]: event.target.value }));\n  };\n\n  return (\n    <div>\n      <ListGroup className=\"list-group-flush\">\n        {loadingComments ? (\n          <p>loading comments</p>\n        ) : (\n          postComments.map((comment) => (\n            <ListGroupItem>\n              <p>\n                <strong>{comment.userEmail}: </strong>\n                {comment.text}\n              </p>\n            </ListGroupItem>\n          ))\n        )}\n      </ListGroup>\n\n      <Form onSubmit={handleSubmit}>\n        <h3> leave a comment</h3>\n\n        <Form.Group\n          className=\"mb-3\"\n          controlId=\"formBasicontent\"\n          value={comment.content}\n          onChange={handleChange(\"content\")}\n        >\n          <Form.Label></Form.Label>\n          <Form.Control\n            as=\"textarea\"\n            rows=\"5\"\n            type=\"text\"\n            placeholder=\"\"\n            ref={commentRef}\n            value={comment.content}\n            onChange={handleChange}\n            reload={reload}\n          />\n          <Form.Text className=\"text-muted\"></Form.Text>\n        </Form.Group>\n\n        <Row>\n          <Button className=\"button\" variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Row>\n        {error && <Alert variant=\"danger\">{error}</Alert>}\n        {success && <Alert variant=\"success\">{success}</Alert>}\n      </Form>\n    </div>\n  );\n};\n\nexport default Comments;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}