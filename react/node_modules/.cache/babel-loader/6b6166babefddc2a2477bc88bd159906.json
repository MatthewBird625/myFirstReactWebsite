{"ast":null,"code":"var _jsxFileName = \"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/RegisterForm.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport { Form, Button, Row, Col, Alert } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { findUser, createUser } from \"../data/repository\";\nimport \"./Button.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterForm = props => {\n  _s();\n\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const emailRef = useRef(null);\n  const passRef = useRef(null);\n  const nameRef = useRef(null);\n  const [user, setUser] = useState({\n    email: \"\",\n    name: \"\",\n    password: \"\"\n  });\n\n  const handleChange = field => event => {\n    setUser(user => ({ ...user,\n      [field]: event.target.value\n    }));\n  }; //   email regex from : https://emailregex.com/\n\n\n  const EMAIL_REGEX = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/; //   password regex from: https://www.thepolyglotdeveloper.com/2015/05/use-regex-to-test-password-strength-in-javascript/\n\n  const PASS_REGEX = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})\");\n\n  const handleValidation = async () => {\n    if (user.name.length < 1) {\n      setError(\"insert a name!\");\n      nameRef.current.focus();\n      return false;\n    }\n\n    if (!EMAIL_REGEX.test(user.email)) {\n      setError(\"incorrect email format!\");\n      emailRef.current.focus();\n      return false;\n    }\n\n    if (!PASS_REGEX.test(user.password)) {\n      setError(\"password must be at least 8 characters, contain at least one numeric digit, one special character, one uppercase and one lowercase letter\");\n      passRef.current.focus();\n      return false;\n    }\n\n    if ((await findUser(user.email)) !== null) {\n      setError(\"email already registered!\");\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleTrim = userDirty => {\n    console.log(user);\n    let userCleanFields = Object.keys(userDirty).forEach(field => userDirty[field] = userDirty[field].trim());\n    console.log(userCleanFields);\n    return userDirty;\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(\"\");\n    setSuccess(\"\");\n    let isValid = await handleValidation();\n    setUser(handleTrim(user)); //if checks are passed- insert the user via API into the database\n\n    if (isValid === true) try {\n      const newUser = await createUser(user);\n      setSuccess(\"successfully registered\");\n      setUser({ ...user,\n        password: \"\"\n      });\n    } catch {\n      setError(\"error- please try again later or contact admin\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \", /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicName\",\n        value: user.name,\n        onChange: handleChange(\"name\"),\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"john smith\",\n          ref: nameRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\",\n          children: \"name goes here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicEmail\",\n        value: user.email,\n        onChange: handleChange(\"email\"),\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"email@email.com\",\n          ref: emailRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\",\n          children: \"your email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: user.password,\n          onChange: handleChange(\"password\"),\n          ref: passRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\",\n          children: \"password must be at least 8 characters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"button-bigger\",\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n              className: \"button-bigger\",\n              variant: \"secondary\",\n              type: \"submit\",\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 19\n      }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"success\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterForm, \"NCtKcMg5nHam1akTURGdexU7e6s=\");\n\n_c = RegisterForm;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["useRef","useState","Form","Button","Row","Col","Alert","Link","findUser","createUser","RegisterForm","props","error","setError","success","setSuccess","emailRef","passRef","nameRef","user","setUser","email","name","password","handleChange","field","event","target","value","EMAIL_REGEX","PASS_REGEX","RegExp","handleValidation","length","current","focus","test","handleTrim","userDirty","console","log","userCleanFields","Object","keys","forEach","trim","handleSubmit","e","preventDefault","isValid","newUser"],"sources":["/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/RegisterForm.js"],"sourcesContent":["import { useRef, useState } from \"react\";\nimport { Form, Button, Row, Col, Alert } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { findUser, createUser } from \"../data/repository\";\nimport \"./Button.css\";\nconst RegisterForm = (props) => {\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n\n  const emailRef = useRef(null);\n  const passRef = useRef(null);\n  const nameRef = useRef(null);\n\n  const [user, setUser] = useState({\n    email: \"\",\n    name: \"\",\n    password: \"\",\n  });\n\n  const handleChange = (field) => (event) => {\n    setUser((user) => ({ ...user, [field]: event.target.value }));\n  };\n  //   email regex from : https://emailregex.com/\n\n  const EMAIL_REGEX =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  //   password regex from: https://www.thepolyglotdeveloper.com/2015/05/use-regex-to-test-password-strength-in-javascript/\n\n  const PASS_REGEX = new RegExp(\n    \"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})\"\n  );\n\n  const handleValidation = async () => {\n    if (user.name.length < 1) {\n      setError(\"insert a name!\");\n      nameRef.current.focus();\n      return false;\n    }\n    if (!EMAIL_REGEX.test(user.email)) {\n      setError(\"incorrect email format!\");\n      emailRef.current.focus();\n\n      return false;\n    }\n\n    if (!PASS_REGEX.test(user.password)) {\n      setError(\n        \"password must be at least 8 characters, contain at least one numeric digit, one special character, one uppercase and one lowercase letter\"\n      );\n      passRef.current.focus();\n\n      return false;\n    }\n    if ((await findUser(user.email)) !== null) {\n      setError(\"email already registered!\");\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleTrim = (userDirty) => {\n    console.log(user);\n    let userCleanFields = Object.keys(userDirty).forEach(\n      (field) => (userDirty[field] = userDirty[field].trim())\n    );\n    console.log(userCleanFields);\n\n    return userDirty;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError(\"\");\n    setSuccess(\"\");\n    let isValid = await handleValidation();\n    setUser(handleTrim(user));\n    //if checks are passed- insert the user via API into the database\n    if (isValid === true)\n      try {\n        const newUser = await createUser(user);\n        setSuccess(\"successfully registered\");\n        setUser({ ...user, password: \"\" });\n      } catch {\n        setError(\"error- please try again later or contact admin\");\n      }\n  };\n\n  return (\n    <div>\n      {\" \"}\n      <Form onSubmit={handleSubmit}>\n        <Form.Group\n          className=\"mb-3\"\n          controlId=\"formBasicName\"\n          value={user.name}\n          onChange={handleChange(\"name\")}\n        >\n          <Form.Label>Name</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"john smith\" ref={nameRef} />\n          <Form.Text className=\"text-muted\">name goes here</Form.Text>\n        </Form.Group>\n        <Form.Group\n          className=\"mb-3\"\n          controlId=\"formBasicEmail\"\n          value={user.email}\n          onChange={handleChange(\"email\")}\n        >\n          <Form.Label>Email address</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"email@email.com\"\n            ref={emailRef}\n          />\n          <Form.Text className=\"text-muted\">your email</Form.Text>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            value={user.password}\n            onChange={handleChange(\"password\")}\n            ref={passRef}\n          />\n          <Form.Text className=\"text-muted\">\n            password must be at least 8 characters\n          </Form.Text>\n        </Form.Group>\n\n        <Row>\n          <Col>\n            <Button className=\"button-bigger\" variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n          </Col>\n          <Col>\n            <Link to=\"/\">\n              {\" \"}\n              <Button\n                className=\"button-bigger\"\n                variant=\"secondary\"\n                type=\"submit\"\n              >\n                Back\n              </Button>\n            </Link>\n          </Col>\n        </Row>\n        {error && <Alert variant=\"danger\">{error}</Alert>}\n        {success && <Alert variant=\"success\">{success}</Alert>}\n      </Form>\n    </div>\n  );\n};\n\nexport default RegisterForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}