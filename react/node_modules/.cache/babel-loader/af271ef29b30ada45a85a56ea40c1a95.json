{"ast":null,"code":"var _jsxFileName = \"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/pages/Feed.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport Post from \"../components/Post\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getPosts, getComments } from \"../data/repository\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Feed = props => {\n  _s();\n\n  const navigate = useNavigate();\n  const [posts, setPosts] = useState(\"\");\n  const [isLoadingPosts, setIsLoadingPosts] = useState(true);\n  const [postComments, setPostComments] = useState(\"\");\n  const [loadingComments, setLoadingComments] = useState(true);\n  useEffect(() => {\n    if (props.login !== true) {\n      navigate(\"/\");\n    }\n  }, []);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const result = await getPosts();\n      setPosts(result);\n      setIsLoadingPosts(false);\n    };\n\n    fetchPosts().catch(console.error);\n    console.log(\"loading posts\");\n  }, [isLoadingPosts]);\n  useEffect(() => {\n    const fetchComments = async () => {\n      const result = await getComments(props.postId);\n      setPostComments(result);\n      setLoadingComments(false);\n    };\n\n    fetchComments().catch(console.error);\n    console.log(\"calling new comments\");\n  }, []); //temporary front end PK generator for posts until back end is implemented\n\n  const [postCount, setPostCount] = useState(localStorage.getItem(\"postCount\") ? JSON.parse(localStorage.getItem(\"postCount\")) : 0);\n\n  const reloadThePostsData = () => {\n    console.log(\"TOGGLE\");\n\n    if (isLoadingPosts === false) {\n      setIsLoadingPosts(true);\n    } else {\n      setIsLoadingPosts(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: 10,\n        md: 8,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Your feed:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), isLoadingPosts ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading posts...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this) : posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-muted\",\n          children: \"No posts have been submitted.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this) : posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n          setPostCount: setPostCount,\n          postCount: postCount,\n          postData: post,\n          postComments: postComments,\n          loadingComments: loadingComments,\n          currentUser: props.currentUser,\n          reloadThePostsData: reloadThePostsData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Feed, \"o3Q5eX/p6vcd/IqN5xP/+Vft6IY=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Feed;\nexport default Feed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"names":["useState","useEffect","Col","Row","Post","useNavigate","getPosts","getComments","Feed","props","navigate","posts","setPosts","isLoadingPosts","setIsLoadingPosts","postComments","setPostComments","loadingComments","setLoadingComments","login","fetchPosts","result","catch","console","error","log","fetchComments","postId","postCount","setPostCount","localStorage","getItem","JSON","parse","reloadThePostsData","length","map","post","currentUser"],"sources":["/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/pages/Feed.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport Post from \"../components/Post\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getPosts, getComments } from \"../data/repository\";\n\nconst Feed = (props) => {\n  const navigate = useNavigate();\n  const [posts, setPosts] = useState(\"\");\n  const [isLoadingPosts, setIsLoadingPosts] = useState(true);\n  const [postComments, setPostComments] = useState(\"\");\n  const [loadingComments, setLoadingComments] = useState(true);\n\n  useEffect(() => {\n    if (props.login !== true) {\n      navigate(\"/\");\n    }\n  }, []);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const result = await getPosts();\n\n      setPosts(result);\n      setIsLoadingPosts(false);\n    };\n    fetchPosts().catch(console.error);\n    console.log(\"loading posts\");\n  }, [isLoadingPosts]);\n\n  useEffect(() => {\n    const fetchComments = async () => {\n      const result = await getComments(props.postId);\n\n      setPostComments(result);\n\n      setLoadingComments(false);\n    };\n    fetchComments().catch(console.error);\n    console.log(\"calling new comments\");\n  }, []);\n\n  //temporary front end PK generator for posts until back end is implemented\n  const [postCount, setPostCount] = useState(\n    localStorage.getItem(\"postCount\")\n      ? JSON.parse(localStorage.getItem(\"postCount\"))\n      : 0\n  );\n  const reloadThePostsData = () => {\n    console.log(\"TOGGLE\");\n    if (isLoadingPosts === false) {\n      setIsLoadingPosts(true);\n    } else {\n      setIsLoadingPosts(false);\n    }\n  };\n  return (\n    <div>\n      <Row>\n        <Col></Col>\n        {/* CENTER COLUMN */}\n        <Col sm={10} md={8}>\n          <h1>Your feed:</h1>\n          {/* loading control logic below is based on lab08- registration and login example forum file */}\n          {isLoadingPosts ? (\n            <div>Loading posts...</div>\n          ) : posts.length === 0 ? (\n            <span className=\"text-muted\">No posts have been submitted.</span>\n          ) : (\n            posts.map((post) => (\n              <Post\n                setPostCount={setPostCount}\n                postCount={postCount}\n                postData={post}\n                postComments={postComments}\n                loadingComments={loadingComments}\n                currentUser={props.currentUser}\n                reloadThePostsData={reloadThePostsData}\n              />\n            ))\n          )}\n        </Col>\n        <Col></Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default Feed;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}