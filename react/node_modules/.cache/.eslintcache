[{"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/index.js":"1","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/App.js":"2","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/reportWebVitals.js":"3","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/NavBarComponent.js":"4","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/Profile.js":"5","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/RegisterForm.js":"6","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/LoginMenu.js":"7","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/LoginForm.js":"8","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/ProfileEdit.js":"9","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/PasswordEdit.js":"10","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/DeleteUser.js":"11","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/pages/PostPage.js":"12","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/pages/LandingPage.js":"13","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/pages/Feed.js":"14","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/pages/ProfilePage.js":"15","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/EmployeeReminder.js":"16","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/Post.js":"17","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/Comments.js":"18","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/data/repository.js":"19","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/Reaction.js":"20","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/Footer.js":"21"},{"size":535,"mtime":1660264698028,"results":"22","hashOfConfig":"23"},{"size":3678,"mtime":1665803081236,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1660264698028,"results":"25","hashOfConfig":"23"},{"size":1030,"mtime":1661581853895,"results":"26","hashOfConfig":"23"},{"size":2435,"mtime":1665805347716,"results":"27","hashOfConfig":"23"},{"size":4742,"mtime":1665720380535,"results":"28","hashOfConfig":"23"},{"size":1395,"mtime":1665805115304,"results":"29","hashOfConfig":"23"},{"size":3544,"mtime":1665804162922,"results":"30","hashOfConfig":"23"},{"size":3204,"mtime":1665720380535,"results":"31","hashOfConfig":"23"},{"size":3666,"mtime":1665720380531,"results":"32","hashOfConfig":"23"},{"size":1176,"mtime":1665720380531,"results":"33","hashOfConfig":"23"},{"size":4220,"mtime":1665794625908,"results":"34","hashOfConfig":"23"},{"size":946,"mtime":1665805653504,"results":"35","hashOfConfig":"23"},{"size":1687,"mtime":1665809070536,"results":"36","hashOfConfig":"23"},{"size":1001,"mtime":1665806012268,"results":"37","hashOfConfig":"23"},{"size":447,"mtime":1661147978907,"results":"38","hashOfConfig":"23"},{"size":4085,"mtime":1665811313465,"results":"39","hashOfConfig":"23"},{"size":3382,"mtime":1665810720678,"results":"40","hashOfConfig":"23"},{"size":3991,"mtime":1665720380535,"results":"41","hashOfConfig":"23"},{"size":2811,"mtime":1665720380535,"results":"42","hashOfConfig":"23"},{"size":395,"mtime":1665803429569,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"1bs2xwk",{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"47"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"47"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"47"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"47"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"47"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/index.js",[],[],[],"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/App.js",[],[],"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/reportWebVitals.js",[],[],"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/NavBarComponent.js",[],[],"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/Profile.js",[],[],"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/RegisterForm.js",["113"],[],"import { useRef, useState } from \"react\";\nimport { Form, Button, Row, Col, Alert } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { findUser, createUser } from \"../data/repository\";\nimport \"../Assets/CSS/Button.css\";\nconst RegisterForm = (props) => {\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n\n  const emailRef = useRef(null);\n  const passRef = useRef(null);\n  const nameRef = useRef(null);\n\n  const [user, setUser] = useState({\n    email: \"\",\n    name: \"\",\n    password: \"\",\n  });\n\n  const handleChange = (field) => (event) => {\n    setUser((user) => ({ ...user, [field]: event.target.value }));\n  };\n  //   email regex from : https://emailregex.com/\n\n  const EMAIL_REGEX =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  //   password regex from: https://www.thepolyglotdeveloper.com/2015/05/use-regex-to-test-password-strength-in-javascript/\n\n  const PASS_REGEX = new RegExp(\n    \"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})\"\n  );\n\n  const handleValidation = async () => {\n    if (user.name.length < 1) {\n      setError(\"insert a name!\");\n      nameRef.current.focus();\n      return false;\n    }\n    if (!EMAIL_REGEX.test(user.email)) {\n      setError(\"incorrect email format!\");\n      emailRef.current.focus();\n\n      return false;\n    }\n\n    if (!PASS_REGEX.test(user.password)) {\n      setError(\n        \"password must be at least 8 characters, contain at least one numeric digit, one special character, one uppercase and one lowercase letter\"\n      );\n      passRef.current.focus();\n\n      return false;\n    }\n    if ((await findUser(user.email)) !== null) {\n      setError(\"email already registered!\");\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleTrim = (userDirty) => {\n    console.log(user);\n    let userClean = {};\n    for (const field in userDirty) {\n      userClean[field] = userDirty[field].trim();\n    }\n\n    return userClean;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError(\"\");\n    setSuccess(\"\");\n    let isValid = await handleValidation();\n    setUser(handleTrim(user));\n    //if checks are passed- insert the user via API into the database\n    if (isValid === true)\n      try {\n        const newUser = await createUser(user);\n        setSuccess(\"successfully registered\");\n        setUser({ ...user, password: \"\" });\n      } catch {\n        setError(\"error- please try again later or contact admin\");\n      }\n  };\n\n  return (\n    <div>\n      {\" \"}\n      <Form onSubmit={handleSubmit}>\n        <Form.Group\n          className=\"mb-3\"\n          controlId=\"formBasicName\"\n          value={user.name}\n          onChange={handleChange(\"name\")}\n        >\n          <Form.Label>Name</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"john smith\" ref={nameRef} />\n          <Form.Text className=\"text-muted\">name goes here</Form.Text>\n        </Form.Group>\n        <Form.Group\n          className=\"mb-3\"\n          controlId=\"formBasicEmail\"\n          value={user.email}\n          onChange={handleChange(\"email\")}\n        >\n          <Form.Label>Email address</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"email@email.com\"\n            ref={emailRef}\n          />\n          <Form.Text className=\"text-muted\">your email</Form.Text>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            value={user.password}\n            onChange={handleChange(\"password\")}\n            ref={passRef}\n          />\n          <Form.Text className=\"text-muted\">\n            password must be at least 8 characters\n          </Form.Text>\n        </Form.Group>\n\n        <Row>\n          <Col>\n            {/* get by display value failed for this button so  get by test id is used */}\n            <Button className=\"button-bigger\" variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n          </Col>\n          <Col>\n            <Link to=\"/\">\n              {\" \"}\n              <Button\n                className=\"button-bigger\"\n                variant=\"secondary\"\n                type=\"submit\"\n              >\n                Back\n              </Button>\n            </Link>\n          </Col>\n        </Row>\n        {error && (\n          <Alert id=\"error\" variant=\"danger\">\n            {error} hello\n          </Alert>\n        )}\n        {success && <Alert variant=\"success\">{success}</Alert>}\n      </Form>\n    </div>\n  );\n};\n\nexport default RegisterForm;\n","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/LoginMenu.js",["114"],[],"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/LoginForm.js",["115"],[],"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/ProfileEdit.js",["116"],[],"import { useState, useRef, useEffect } from \"react\";\n\nimport { Form, Row, Col, Button, Alert } from \"react-bootstrap\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport {\n  getUser,\n  findUser,\n  updateUser,\n  setUserLocal,\n} from \"../data/repository\";\n\nconst ProfileEdit = (props) => {\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n\n  const emailRef = useRef(null);\n  const nameRef = useRef(null);\n  const navigate = useNavigate();\n\n  const [user, setUser] = useState(\"\");\n\n  const [userInput, setUserInput] = useState({\n    email: \"\",\n    name: \"\",\n    oldEmail: \"\",\n  });\n\n  //fetch our user profile data with a use effect\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      const result = await findUser(getUser().email);\n      setUser(result);\n      setUserInput(result);\n    };\n    fetchUser();\n  }, []);\n\n  //   email regex from : https://emailregex.com/\n  const EMAIL_REGEX =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError(\"\");\n    setSuccess(\"\");\n\n    if (!EMAIL_REGEX.test(userInput.email)) {\n      setError(\"incorrect email format!\");\n      emailRef.current.focus();\n      return;\n    }\n    if (userInput.name.length < 1) {\n      setError(\"input a Name\");\n      nameRef.current.focus();\n      return;\n    }\n    try {\n      userInput.oldEmail = user.email;\n      setUserLocal(userInput);\n      updateUser(userInput);\n      setSuccess(\"profile updated!\");\n    } catch {\n      setError(\"unable to update profile- contact admin\");\n    }\n  };\n  const handleChange = (field) => (event) => {\n    setUserInput((user) => ({ ...user, [field]: event.target.value }));\n  };\n\n  return (\n    <div>\n      {\" \"}\n      <Form onSubmit={handleSubmit}>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <Form.Label>New Email address</Form.Label>\n          <Form.Control\n            type=\"text\"\n            ref={emailRef}\n            value={userInput.email}\n            onChange={handleChange(\"email\")}\n          />\n          <Form.Text className=\"text-muted\"></Form.Text>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n          <Form.Label>New Name</Form.Label>\n\n          <Form.Control\n            type=\"text\"\n            value={userInput.name}\n            onChange={handleChange(\"name\")}\n            ref={nameRef}\n          />\n          <Form.Text className=\"text-muted\"></Form.Text>\n        </Form.Group>\n\n        <Row>\n          <Col>\n            <Button className=\"button-bigger\" variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n          </Col>\n          <Col>\n            <Link to=\"/profile\">\n              {\" \"}\n              <Button className=\"button-bigger\" variant=\"secondary\">\n                Back\n              </Button>\n            </Link>\n          </Col>\n        </Row>\n        {error && <Alert variant=\"danger\">{error}</Alert>}\n        {success && <Alert variant=\"success\">{success}</Alert>}\n      </Form>\n    </div>\n  );\n};\n\nexport default ProfileEdit;\n","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/PasswordEdit.js",["117","118"],[],"import { useState, useRef, useEffect } from \"react\";\n\nimport { Form, Row, Col, Button, Alert } from \"react-bootstrap\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { getUser, updatePassword } from \"../data/repository\";\n\nconst PasswordEdit = (props) => {\n  let user = getUser();\n\n  const [oldPass, setOldPass] = useState(\"\");\n  const [newPass, setNewPass] = useState(\"\");\n  const [newPassConfirm, setNewPassConfirm] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n\n  const oldPassRef = useRef(null);\n  const newPassRef = useRef(null);\n  const newPassConfirmRef = useRef(null);\n  const navigate = useNavigate();\n\n  //   password regex from: https://www.thepolyglotdeveloper.com/2015/05/use-regex-to-test-password-strength-in-javascript/\n\n  const PASS_REGEX = new RegExp(\n    \"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})\"\n  );\n  const handleSubmit = async (e) => {\n    setError(\"\");\n    setSuccess(\"\");\n\n    e.preventDefault();\n    if (!PASS_REGEX.test(oldPass)) {\n      setError(\"incorrect password format\");\n      oldPassRef.current.focus();\n      return;\n    }\n    if (!PASS_REGEX.test(newPass)) {\n      setError(\"incorrect password format\");\n      newPassRef.current.focus();\n      return;\n    }\n    if (!PASS_REGEX.test(newPassConfirm)) {\n      setError(\"incorrect password format\");\n      newPassConfirmRef.current.focus();\n      return;\n    }\n\n    if (newPass !== newPassConfirm) {\n      setError(\"new passwords don't match!\");\n      return;\n    }\n\n    const passwords = {\n      old: oldPass,\n      new: newPass,\n      userEmail: user.email,\n    };\n    const change = await updatePassword(passwords);\n    console.log(change.result);\n\n    if (change.result !== false) {\n      setSuccess(\"password changed!\");\n    } else {\n      setError(\"incorrect original password!\");\n    }\n  };\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <Form.Label>old Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            ref={oldPassRef}\n            value={oldPass}\n            onChange={(e) => setOldPass(e.target.value)}\n          />\n          <Form.Text className=\"text-muted\"></Form.Text>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n          <Form.Label>New Password</Form.Label>\n\n          <Form.Control\n            type=\"password\"\n            value={newPass}\n            onChange={(e) => setNewPass(e.target.value)}\n            ref={newPassRef}\n          />\n          <Form.Text className=\"text-muted\"></Form.Text>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n          <Form.Label>New Password</Form.Label>\n\n          <Form.Control\n            type=\"password\"\n            value={newPassConfirm}\n            onChange={(e) => setNewPassConfirm(e.target.value)}\n            ref={newPassConfirmRef}\n          />\n          <Form.Text className=\"text-muted\"></Form.Text>\n        </Form.Group>\n\n        <Row>\n          <Col>\n            <Button className=\"button-bigger\" variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n          </Col>\n          <Col>\n            <Link to=\"/profile\">\n              {\" \"}\n              <Button className=\"button-bigger\" variant=\"secondary\">\n                Back\n              </Button>\n            </Link>\n          </Col>\n        </Row>\n        {error && <Alert variant=\"danger\">{error}</Alert>}\n        {success && <Alert variant=\"success\">{success}</Alert>}\n      </Form>\n    </div>\n  );\n};\n\nexport default PasswordEdit;\n","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/DeleteUser.js",["119"],[],"import { Form, Row, Col, Button } from \"react-bootstrap\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { deleteUser, getUser } from \"../data/repository\";\n\nconst DeleteUser = (props) => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (props.loginStatus !== true) {\n      navigate(\"/\");\n    }\n  });\n\n  const [user, setUser] = useState(getUser());\n\n  const handleSubmit = () => {\n    deleteUser(user);\n    props.setLogin(false);\n    props.logInUser(\"\");\n    alert(\"account deleted!\");\n\n    return;\n  };\n\n  return (\n    <div>\n      <h2>are you sure you want to delete {props.currentUser}'s account?</h2>\n      <Form onSubmit={handleSubmit}>\n        <Row>\n          <Col>\n            <Button className=\"button-bigger\" variant=\"primary\" type=\"submit\">\n              Yes\n            </Button>\n          </Col>\n          <Col>\n            <Link to=\"/profile\">\n              {\" \"}\n              <Button className=\"button-bigger\" variant=\"secondary\">\n                Back\n              </Button>\n            </Link>\n          </Col>\n        </Row>\n      </Form>\n    </div>\n  );\n};\n\nexport default DeleteUser;\n","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/pages/PostPage.js",["120"],[],"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/pages/LandingPage.js",[],[],"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/pages/Feed.js",["121"],[],"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/pages/ProfilePage.js",[],[],"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/EmployeeReminder.js",[],[],"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/Post.js",[],[],"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/Comments.js",["122"],[],"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/data/repository.js",[],[],"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/Reaction.js",["123","124","125","126"],[],"import \"../Assets/CSS/Reaction.css\";\nimport { useEffect, useState } from \"react\";\nimport {\n  createReaction,\n  getUser,\n  deleteReaction,\n  doesReactionExist,\n  getReactions,\n} from \"../data/repository\";\n\nconst Reaction = (props) => {\n  const happy = \"😁\";\n  const sad = \"😞\";\n  const angry = \"😠\";\n  const like = \"👍\";\n  const dislike = \"👎\";\n\n  const reactionIds = [\n    \"like\" + props.postId,\n    \"dislike\" + props.postId,\n    \"happy\" + props.postId,\n    \"sad\" + props.postId,\n    \"angry\" + props.postId,\n  ];\n  const [userReaction, setUserReaction] = useState({\n    userEmail: getUser().email,\n    postId: props.postId,\n    reaction: \"\",\n  });\n\n  useEffect(() => {\n    const changeReaction = async () => {\n      if (userReaction.reaction !== \"\") {\n        const deleteOldReaction = await deleteReaction(userReaction);\n\n        const result = await createReaction(userReaction);\n      }\n    };\n    changeReaction();\n  }, [userReaction]);\n\n  useEffect(() => {\n    const getOldReaction = async () => {\n      const reaction = await doesReactionExist(props.postId, getUser().email);\n      try {\n        setUserReaction({ ...userReaction, reaction: reaction[0].reaction });\n      } catch {}\n      displayUserReaction(reaction[0].reaction);\n    };\n    getOldReaction();\n  }, []);\n\n  const handleReaction = (reaction) => {\n    setUserReaction({ ...userReaction, reaction: reaction });\n    displayUserReaction(reaction);\n  };\n\n  //updates the background colour of the clicked reaction button\n  const displayUserReaction = (reaction) => {\n    for (const id of reactionIds) {\n      const icon = document.getElementById(id);\n      icon.style.backgroundColor = \"white\";\n    }\n    const icon = document.getElementById(reaction + props.postId);\n    icon.style.backgroundColor = \"blue\";\n  };\n\n  return (\n    <div>\n      <table>\n        <tr>\n          <th onClick={() => handleReaction(\"like\")}>\n            <button id={reactionIds[0]} className=\"reaction\">\n              {like}\n            </button>\n          </th>{\" \"}\n          <th onClick={() => handleReaction(\"dislike\")}>\n            <button id={reactionIds[1]} className=\"reaction\">\n              {dislike}\n            </button>\n          </th>\n          <th onClick={() => handleReaction(\"happy\")}>\n            <button id={reactionIds[2]} className=\"reaction\">\n              {happy}\n            </button>\n          </th>\n          <th onClick={() => handleReaction(\"sad\")}>\n            <button id={reactionIds[3]} className=\"reaction\">\n              {sad}\n            </button>\n          </th>{\" \"}\n          <th onClick={() => handleReaction(\"angry\")}>\n            <button id={reactionIds[4]} className=\"reaction\">\n              {angry}\n            </button>\n          </th>{\" \"}\n        </tr>\n      </table>\n    </div>\n  );\n};\n\nexport default Reaction;\n","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/Footer.js",[],[],{"ruleId":"127","severity":1,"message":"128","line":82,"column":15,"nodeType":"129","messageId":"130","endLine":82,"endColumn":22},{"ruleId":"127","severity":1,"message":"131","line":1,"column":10,"nodeType":"129","messageId":"130","endLine":1,"endColumn":18},{"ruleId":"127","severity":1,"message":"132","line":4,"column":22,"nodeType":"129","messageId":"130","endLine":4,"endColumn":29},{"ruleId":"127","severity":1,"message":"133","line":18,"column":9,"nodeType":"129","messageId":"130","endLine":18,"endColumn":17},{"ruleId":"127","severity":1,"message":"134","line":1,"column":28,"nodeType":"129","messageId":"130","endLine":1,"endColumn":37},{"ruleId":"127","severity":1,"message":"133","line":19,"column":9,"nodeType":"129","messageId":"130","endLine":19,"endColumn":17},{"ruleId":"127","severity":1,"message":"135","line":15,"column":16,"nodeType":"129","messageId":"130","endLine":15,"endColumn":23},{"ruleId":"127","severity":1,"message":"136","line":15,"column":9,"nodeType":"129","messageId":"130","endLine":15,"endColumn":19},{"ruleId":"137","severity":1,"message":"138","line":17,"column":6,"nodeType":"139","endLine":17,"endColumn":8,"suggestions":"140"},{"ruleId":"137","severity":1,"message":"141","line":36,"column":6,"nodeType":"139","endLine":36,"endColumn":8,"suggestions":"142"},{"ruleId":"127","severity":1,"message":"143","line":8,"column":3,"nodeType":"129","messageId":"130","endLine":8,"endColumn":15},{"ruleId":"127","severity":1,"message":"144","line":34,"column":15,"nodeType":"129","messageId":"130","endLine":34,"endColumn":32},{"ruleId":"127","severity":1,"message":"145","line":36,"column":15,"nodeType":"129","messageId":"130","endLine":36,"endColumn":21},{"ruleId":"137","severity":1,"message":"146","line":51,"column":6,"nodeType":"139","endLine":51,"endColumn":8,"suggestions":"147"},"no-unused-vars","'newUser' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'setUser' is defined but never used.","'navigate' is assigned a value but never used.","'useEffect' is defined but never used.","'setUser' is assigned a value but never used.","'contentRef' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'navigate' and 'props.login'. Either include them or remove the dependency array.","ArrayExpression",["148"],"React Hook useEffect has a missing dependency: 'props.postId'. Either include it or remove the dependency array.",["149"],"'getReactions' is defined but never used.","'deleteOldReaction' is assigned a value but never used.","'result' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'displayUserReaction', 'props.postId', and 'userReaction'. Either include them or remove the dependency array. You can also do a functional update 'setUserReaction(u => ...)' if you only need 'userReaction' in the 'setUserReaction' call.",["150"],{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},"Update the dependencies array to be: [navigate, props.login]",{"range":"157","text":"158"},"Update the dependencies array to be: [props.postId]",{"range":"159","text":"160"},"Update the dependencies array to be: [displayUserReaction, props.postId, userReaction]",{"range":"161","text":"162"},[506,508],"[navigate, props.login]",[1091,1093],"[props.postId]",[1272,1274],"[displayUserReaction, props.postId, userReaction]"]