[{"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/index.js":"1","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/App.js":"2","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/reportWebVitals.js":"3","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/NavBarComponent.js":"4","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/Profile.js":"5","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/RegisterForm.js":"6","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/LoginMenu.js":"7","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/LoginForm.js":"8","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/ProfileEdit.js":"9","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/PasswordEdit.js":"10","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/DeleteUser.js":"11","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/pages/PostPage.js":"12","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/pages/LandingPage.js":"13","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/pages/Feed.js":"14","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/pages/ProfilePage.js":"15","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/EmployeeReminder.js":"16","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/Post.js":"17","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/Comments.js":"18","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/Comment.js":"19","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/data/repository.js":"20"},{"size":535,"mtime":1660264698028,"results":"21","hashOfConfig":"22"},{"size":3910,"mtime":1664857680905,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1660264698028,"results":"24","hashOfConfig":"22"},{"size":1030,"mtime":1661581853895,"results":"25","hashOfConfig":"22"},{"size":2223,"mtime":1661583985355,"results":"26","hashOfConfig":"22"},{"size":4405,"mtime":1664862058571,"results":"27","hashOfConfig":"22"},{"size":1075,"mtime":1661147978907,"results":"28","hashOfConfig":"22"},{"size":4262,"mtime":1661581853895,"results":"29","hashOfConfig":"22"},{"size":3263,"mtime":1661581853895,"results":"30","hashOfConfig":"22"},{"size":4114,"mtime":1661581853895,"results":"31","hashOfConfig":"22"},{"size":2339,"mtime":1661583985355,"results":"32","hashOfConfig":"22"},{"size":5661,"mtime":1661581853903,"results":"33","hashOfConfig":"22"},{"size":1023,"mtime":1661581853903,"results":"34","hashOfConfig":"22"},{"size":1504,"mtime":1661581853903,"results":"35","hashOfConfig":"22"},{"size":944,"mtime":1661581853903,"results":"36","hashOfConfig":"22"},{"size":447,"mtime":1661147978907,"results":"37","hashOfConfig":"22"},{"size":2926,"mtime":1661581853895,"results":"38","hashOfConfig":"22"},{"size":452,"mtime":1661581853895,"results":"39","hashOfConfig":"22"},{"size":240,"mtime":1661581853895,"results":"40","hashOfConfig":"22"},{"size":1357,"mtime":1664860506563,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"1bs2xwk",{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"45"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"45"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"45"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"45"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"45"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"45"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"45"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/index.js",[],[],[],"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/App.js",[],[],"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/reportWebVitals.js",[],[],"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/NavBarComponent.js",[],[],"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/Profile.js",[],[],"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/RegisterForm.js",["110","111"],[],"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/LoginMenu.js",["112"],[],"import { useState } from \"react\";\nimport { Button, Row, Col } from \"react-bootstrap\";\nimport { Link} from \"react-router-dom\";\nimport \"./Button.css\";\nconst Login = (props) => {\n\n  \n\n\n\n\n  return (\n    <div>\n    \n    {props.loginStatus!== true && (<div>\n      <h1>sign in to continue</h1>\n     <p class=\"mt-4\">\n        {\" \"}\n        company policy requires that all content is to be only accessed by\n        registered members!\n      </p>\n      <Row>\n        <Col>\n          <Link to=\"/loginForm\">\n            <Button className=\"mx-1 my-2 button-bigger\"> Login</Button>\n          </Link>\n        </Col>\n        <Col>\n          <Link to=\"/register\">\n            {\" \"}\n            <Button className=\"mx-1 my-2 button-bigger\" variant=\"secondary\">\n              Register\n            </Button>\n          </Link>\n        </Col>\n      \n      </Row>\n  \n    </div>) }\n    {props.loginStatus === true && (<div>\n      <h1>Welcome...</h1>\n     <p class=\"mt-4\">\n        {localStorage.getItem(\"name\")}\n        \n      </p>\n      \n  \n    </div>)}\n    \n    </div>\n  );\n};\n\nexport default Login;\n","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/LoginForm.js",[],[],"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/ProfileEdit.js",["113"],[],"import { useState, useRef, useEffect} from \"react\";\n\nimport { Form, Row, Col, Button, Alert } from \"react-bootstrap\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nconst ProfileEdit = (props) => {\n\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n\n  const emailRef = useRef(null);\n  const nameRef = useRef(null);\n  const navigate = useNavigate();\n\n  const[user,setUser] = useState({\n    name: \"\",\n    email: \"\",\n    password:\"\"\n  })\n\n  const [users, setUsers] = useState(\n    localStorage.getItem(\"users\")\n      ? JSON.parse(localStorage.getItem(\"users\"))\n      : []\n  );\n\n  useEffect(() => {\n    localStorage.setItem(\"users\", JSON.stringify(users));\n   \n  }, [users]);\n\n\n  //   email regex from : https://emailregex.com/\n  const EMAIL_REGEX =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setError(\"\");\n    setSuccess(\"\");\n\n    \n    if (!EMAIL_REGEX.test(user.email)) {\n      setError(\"incorrect email format!\");\n      emailRef.current.focus();\n      return;\n    }\n    if (user.name.length< 1) {\n        setError(\"input a Name\");\n        nameRef.current.focus();\n        return;\n      }\n\n      setUsers(() =>{\n        let newUsers = [...users]\n      \n    \n        newUsers = newUsers.map((details) => {\n          if (details.email === props.currentUser){\n            user.password = details.password\n            return user;\n    \n          }\n          else{\n            return details;\n          }\n        })\n        console.log(newUsers)\n        return newUsers;\n     \n\n  });\n  setSuccess(\"profile updated!\");\n\n  props.logInUser(user.email)\n\n \n\n\n\n  }\n  const handleChange = (field) => (event) => {\n    setUser((user) => ({ ...user, [field]: event.target.value }));\n  };\n\n  return (\n    <div>\n      {\" \"}\n      <Form onSubmit={handleSubmit}>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <Form.Label>New Email address</Form.Label>\n          <Form.Control\n            type=\"text\"\n            ref={emailRef}\n            value={user.email}\n            onChange={handleChange(\"email\")}\n          />\n          <Form.Text className=\"text-muted\"></Form.Text>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n          <Form.Label>New Name</Form.Label>\n\n          <Form.Control\n            type=\"text\"\n            value={user.name}\n            onChange={handleChange(\"name\")}\n            ref={nameRef}\n          />\n          <Form.Text className=\"text-muted\"></Form.Text>\n        </Form.Group>\n\n        <Row>\n          <Col>\n            <Button className=\"button-bigger\" variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n          </Col>\n          <Col>\n            <Link to=\"/profile\">\n              {\" \"}\n              <Button className=\"button-bigger\" variant=\"secondary\">\n                Back\n              </Button>\n            </Link>\n          </Col>\n        </Row>\n        {error && <Alert variant=\"danger\">{error}</Alert>}\n        {success && <Alert variant=\"success\">{success}</Alert>}\n      </Form>\n    </div>\n  );\n};\n\nexport default ProfileEdit;\n","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/PasswordEdit.js",["114"],[],"import { useState, useRef, useEffect } from \"react\";\n\nimport { Form, Row, Col, Button, Alert } from \"react-bootstrap\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nconst PasswordEdit = (props) => {\n  const [users, setUsers] = useState(\n    localStorage.getItem(\"users\")\n      ? JSON.parse(localStorage.getItem(\"users\"))\n      : []\n  );\n\n  useEffect(() => {\n    localStorage.setItem(\"users\", JSON.stringify(users));\n  }, [users]);\n\n  let user = users.find((userSearch) => userSearch.email === props.currentUser);\n\n  const originalPassword = user.password;\n\n  const [oldPass, setOldPass] = useState(\"\");\n  const [newPass, setNewPass] = useState(\"\");\n  const [newPassConfirm, setNewPassConfirm] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n\n  const oldPassRef = useRef(null);\n  const newPassRef = useRef(null);\n  const newPassConfirmRef = useRef(null);\n  const navigate = useNavigate();\n\n  //   password regex from: https://www.thepolyglotdeveloper.com/2015/05/use-regex-to-test-password-strength-in-javascript/\n\n  const PASS_REGEX = new RegExp(\n    \"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})\"\n  );\n  const handleSubmit = (e) => {\n    setError(\"\");\n    setSuccess(\"\");\n\n    e.preventDefault();\n    if (!PASS_REGEX.test(oldPass)) {\n      setError(\"incorrect password format\");\n      oldPassRef.current.focus();\n      return;\n    }\n    if (!PASS_REGEX.test(newPass)) {\n      setError(\"incorrect password format\");\n      newPassRef.current.focus();\n      return;\n    }\n    if (!PASS_REGEX.test(newPassConfirm)) {\n      setError(\"incorrect password format\");\n      newPassConfirmRef.current.focus();\n      return;\n    }\n\n    if (newPass !== newPassConfirm) {\n      setError(\"new passwords don't match!\");\n      return;\n    }\n    if (oldPass !== originalPassword) {\n      setError(\"incorrect account password!\");\n      oldPassRef.current.focus();\n      return;\n    }\n\n    setUsers(() => {\n      let newUsers = [...users];\n\n      newUsers = newUsers.map((details) => {\n        if (details.email === props.currentUser) {\n          user.password = newPass;\n          return user;\n        } else {\n          return details;\n        }\n      });\n      console.log(newUsers);\n      return newUsers;\n    });\n    setSuccess(\"password changed!\");\n  };\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <Form.Label>oldPassword</Form.Label>\n          <Form.Control\n            type=\"password\"\n            ref={oldPassRef}\n            value={oldPass}\n            onChange={(e) => setOldPass(e.target.value)}\n          />\n          <Form.Text className=\"text-muted\"></Form.Text>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n          <Form.Label>New Password</Form.Label>\n\n          <Form.Control\n            type=\"password\"\n            value={newPass}\n            onChange={(e) => setNewPass(e.target.value)}\n            ref={newPassRef}\n          />\n          <Form.Text className=\"text-muted\"></Form.Text>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n          <Form.Label>New Password</Form.Label>\n\n          <Form.Control\n            type=\"password\"\n            value={newPassConfirm}\n            onChange={(e) => setNewPassConfirm(e.target.value)}\n            ref={newPassConfirmRef}\n          />\n          <Form.Text className=\"text-muted\"></Form.Text>\n        </Form.Group>\n\n        <Row>\n          <Col>\n            <Button className=\"button-bigger\" variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n          </Col>\n          <Col>\n            <Link to=\"/profile\">\n              {\" \"}\n              <Button className=\"button-bigger\" variant=\"secondary\">\n                Back\n              </Button>\n            </Link>\n          </Col>\n        </Row>\n        {error && <Alert variant=\"danger\">{error}</Alert>}\n        {success && <Alert variant=\"success\">{success}</Alert>}\n      </Form>\n    </div>\n  );\n};\n\nexport default PasswordEdit;\n","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/DeleteUser.js",["115"],[],"import { Form, Row, Col, Button } from \"react-bootstrap\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\n\nconst DeleteUser = (props) => {\n  const navigate = useNavigate();\n\n    useEffect(() => {\n      if (props.loginStatus !== true) {\n        navigate(\"/\");\n      }\n    });\n\n\n  const [users, setUsers] = useState(\n    localStorage.getItem(\"users\")\n      ? JSON.parse(localStorage.getItem(\"users\"))\n      : []\n  );\n\n\n  const [posts, setPosts] = useState(\n    localStorage.getItem(\"posts\")\n      ? JSON.parse(localStorage.getItem(\"posts\"))\n      : []\n  );\n\n  const [comments, setComments] = useState(\n    localStorage.getItem(\"comments\")\n      ? JSON.parse(localStorage.getItem(\"comments\"))\n      : []\n  );\n\n  useEffect(() => {\n    localStorage.setItem(\"users\", JSON.stringify(users));\n    localStorage.setItem(\"comments\", JSON.stringify(comments));\n    localStorage.setItem(\"posts\", JSON.stringify(posts));\n   \n  }, [users]);\n\n\n  const handleSubmit = () => {\n    setUsers(()=>{\n      let newUsers = [...users]\n      newUsers = newUsers.filter(userFiltered => userFiltered.email !== props.currentUser)\n      console.log(newUsers)\n      \n\n      return newUsers;\n\n    })\n\n    setPosts(() => {\n      let newPosts = [...posts]\n      newPosts = newPosts.filter(postFiltered => postFiltered.userAccount !== props.currentUser)\n  \n      \n\n      return newPosts;\n\n    })\n    setComments(() => {\n      let newComments = [...comments]\n      newComments = newComments.filter(commentFiltered => commentFiltered.userAccount !== props.currentUser)\n  \n      \n\n      return newComments;\n\n    })\n\n    props.setLogin(false);\n    props.logInUser(\"\");\n    alert(\"account deleted!\")\n\n    \n\n   \n\n    return;\n  };\n\n  return (\n    <div>\n      <h2>are you sure you want to delete {props.currentUser}'s account?</h2>\n      <Form onSubmit={handleSubmit}>\n        <Row>\n          <Col>\n            <Button className=\"button-bigger\" variant=\"primary\" type=\"submit\">\n              Yes\n            </Button>\n          </Col>\n          <Col>\n            <Link to=\"/profile\">\n              {\" \"}\n              <Button className=\"button-bigger\" variant=\"secondary\">\n                Back\n              </Button>\n            </Link>\n          </Col>\n        </Row>\n      </Form>\n    </div>\n  );\n};\n\nexport default DeleteUser;\n","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/pages/PostPage.js",["116"],[],"import { Container, Row, Col, Form, Button, Alert } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nimport { useNavigate } from \"react-router-dom\";\n\nimport \"../components/Button.css\";\nimport \"./PostPage.css\";\nimport \"./view.css\";\nimport { useRef, useState, useEffect } from \"react\";\n\n\nconst PostPage = (props) => {\n  \n  const navigate = useNavigate();\n\n\n  // i manually generate a pk for each post using this state and post counter in local storage.\n  //later this will be replaced with the pk from the database- without this when a profile is deleted, \n  // the comments of that post move to the next made post! which is incorrect behaviour\n  const [postCount, setPostCount] = useState(\n    localStorage.getItem(\"postCount\")\n      ? JSON.parse(localStorage.getItem(\"postCount\"))\n      : 0\n  );\n\n\n  useEffect(() => {\n    if (props.login !== true) {\n      navigate(\"/\");\n    }\n  }, []);\n\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const contentRef = useRef(null);\n\n  const [imageUpload, setImageUpload] = useState(null);\n  const [form, setForm] = useState({\n    content: \"\",\n    userAccount: props.currentUser,\n    postId: postCount\n  });\n\n  const [posts, setPosts] = useState(\n    localStorage.getItem(\"posts\")\n      ? JSON.parse(localStorage.getItem(\"posts\"))\n      : []\n  );\n  \n\n  useEffect(() => {\n    localStorage.setItem(\"posts\", JSON.stringify(posts));\n  }, [posts]);\n\n  useEffect(() => {\n    localStorage.setItem(\"postCount\", JSON.stringify(postCount));\n  }, [postCount]);\n\n\n  // handle change and handleSubmit is based off the solution presented in the RMIT FWP WEEK 5 LAB with some modifications\n  const handleChange = (field) => (event) => {\n    setForm((form) => ({ ...form, [field]: event.target.value }));\n\n    setSuccess(\"\");\n  };\n\n\n  const handleSubmit = (e) => {\n    let postCount = 0;\n    e.preventDefault();\n    if (form.content.length < 1 || form.content.length > 250) {\n      setError(\"content must be between 1 and 250 characters\");\n      return;\n    }\n\n    setPosts((post) => {\n      let newPosts = [...posts];\n\n      newPosts = newPosts.map((entry) => {\n        postCount++;\n        return entry;\n      });\n      //Later this post ID will come from the backend\n      //currently it generates ID in increments of 2 instead of 1 thanks to the React development environment.\n      //this post ID will be used with a /images path to store images locally for now till the back end is developed.\n      //currently increments values of 2 instead of 1- but doesnt't affect funcitonality and not worth fixing as this will not be used later. \n      \n      form.postId = postCount;\n      newPosts.push(form);\n      setSuccess(\"post successful!\");\n      setForm({ content: \"\", userAccount: props.currentUser });\n      setPostCount((parseInt(postCount)+1).toString())\n\n      //if the user has an image\n      //functionality to store image on backend goes here:\n      if(imageUpload){\n        console.log(imageUpload)\n      }\n    \n      return newPosts;\n    });\n  };\n\n  return (\n    <Container fluid>\n      <Row className=\"min-view post\">\n        <Col></Col>\n        <Col sm={8} md={6}>\n          {/* Dummy placeg=holder for now- TODO replace with company logo */}\n          <h1 className=\"heading\">Make a Post</h1>\n          {imageUpload && (\n        <div>\n        <img className=\"post-image\" alt=\"not fount\"src={URL.createObjectURL(imageUpload)} />\n        <br />\n        <Button className=\"image-button\" variant=\"secondary\" onClick={()=>setImageUpload(null)}>Remove</Button>\n      \n        </div>\n      )}\n\n          <Form onSubmit={handleSubmit}>\n          <Form.Group\n              className=\"mb-3\"\n              controlId=\"formBasicontent\"\n              value={form.content}\n              onChange={handleChange(\"content\")}\n            >\n              <Form.Label></Form.Label>\n              <Form.Control\n                type=\"file\"\n                name=\"myImage\"\n                multiple accept=\"image/*\"\n        onChange={(event) => {\n          console.log(event.target.files[0]);\n          setImageUpload(event.target.files[0]);\n        }}\n               \n              />\n              <Form.Text className=\"text-muted\">upload image</Form.Text>\n            </Form.Group>\n            <Form.Group\n              className=\"mb-3\"\n              controlId=\"formBasicontent\"\n              value={form.content}\n              onChange={handleChange(\"content\")}\n            >\n              <Form.Label></Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                rows=\"5\"\n                type=\"text\"\n                placeholder=\"\"\n                ref={contentRef}\n              />\n              <Form.Text className=\"text-muted\"></Form.Text>\n            </Form.Group>\n\n            <Row>\n              <Col>\n                <Button\n                  className=\"button-bigger\"\n                  variant=\"primary\"\n                  type=\"submit\"\n                >\n                  Submit\n                </Button>\n              </Col>\n              <Col>\n                <Link to=\"/\">\n                  {\" \"}\n                  <Button className=\"button-bigger\" variant=\"secondary\">\n                    Back\n                  </Button>\n                </Link>\n              </Col>\n            </Row>\n            {error && <Alert variant=\"danger\">{error}</Alert>}\n            {success && <Alert variant=\"success\">{success}</Alert>}\n          </Form>\n          {/* image generated from https://smashinglogo.com/ and used for non for profit educational purposes */}\n        </Col>\n        <Col></Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default PostPage;\n","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/pages/LandingPage.js",[],[],"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/pages/Feed.js",["117","118"],[],"import { useState, useEffect } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport Post from \"../components/Post\";\nimport { useNavigate } from \"react-router-dom\";\n\n\nconst Feed = (props) => {\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n      if (props.login !== true) {\n        navigate(\"/\");\n      }\n    }, []);\n  \n\n    const [posts, setPosts] = useState(\n        localStorage.getItem(\"posts\")\n          ? JSON.parse(localStorage.getItem(\"posts\"))\n          : []\n      );\n\n\n  const [comments, setComments] = useState(\n    localStorage.getItem(\"comments\")\n      ? JSON.parse(localStorage.getItem(\"comments\"))\n      : []\n  );\n\n  //temporary front end PK generator for posts until back end is implemented\n  const [postCount, setPostCount] = useState(\n    localStorage.getItem(\"postCount\")\n      ? JSON.parse(localStorage.getItem(\"postCount\"))\n      : 0\n  );\n\n  useEffect(() => {\n    localStorage.setItem(\"postCount\", postCount.toString())\n  }, [postCount]);\n\n\n\n    \n\n\n    return <div>\n        <Row>\n            <Col>\n                \n            </Col>\n            {/* CENTER COLUMN */}\n            <Col sm={10} md= {8}>\n            <h1>Your feed:</h1>\n\n            {posts.map((post)=>( <Post setPostCount={setPostCount} postCount={postCount} postData= {post} comments={comments} setComments={setComments} currentUser = {props.currentUser}/> ))}\n      \n                \n            </Col>\n            <Col>\n\n            </Col>\n        </Row>\n    </div>\n};\n\n\nexport default Feed;","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/pages/ProfilePage.js",[],[],"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/EmployeeReminder.js",[],[],"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/Post.js",["119"],[],"import { useRef, useState, useEffect } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\nimport \"./Post.css\";\nimport { Row, Alert } from \"react-bootstrap\";\nimport Comments from \"./Comments\";\n\nconst Post = (props) => {\n  const [comment, setComment] = useState({\n    content: \"\",\n    userAccount: props.currentUser,\n    commentId: 0, //not required now- but will be the PK from the database\n    postId: props.postData.postId,\n  });\n\n  useEffect(() => {\n    localStorage.setItem(\"comments\", JSON.stringify(props.comments));\n  }, [props.comments]);\n\n  const commentRef = useRef(null);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    setError(\"\");\n    if (comment.content.length < 1 || comment.content.length > 250) {\n      setError(\"comments must be between 1 and 250 characters\");\n      return;\n    }\n   \n\n    setComment({...comment, commentId: parseInt(props.postCount)})\n\n\n    props.setComments(() => {\n      let newComments = [...props.comments];\n\n      newComments.push(comment);\n      return newComments;\n    });\n\n    setComment({ ...comment, content: \"\" });\n  };\n\n  const handleChange = (field) => (event) => {\n    setComment((comment) => ({ ...comment, [field]: event.target.value }));\n  };\n\n  return (\n    <Card className=\"post\">\n      {/* points to a random photo for now. Will be updated with the picture from the back end when implemented */}\n      <Card.Img variant=\"top\" src=\"https://picsum.photos/200/100\" />\n      <Card.Body>\n        <Card.Title className=\"post-username\">\n          {props.postData.userAccount}\n        </Card.Title>\n        <Card.Text className=\"post-text\">{props.postData.content}</Card.Text>\n      </Card.Body>\n      <Comments comments={props.comments} postId={props.postData.postId}></Comments>\n      <Card.Body>\n        <Form onSubmit={handleSubmit}>\n          <h3> leave a comment</h3>\n\n          <Form.Group\n            className=\"mb-3\"\n            controlId=\"formBasicontent\"\n            value={comment.content}\n            onChange={handleChange(\"content\")}\n          >\n            <Form.Label></Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              rows=\"5\"\n              type=\"text\"\n              placeholder=\"\"\n              ref={commentRef}\n              value={comment.content}\n              onChange={handleChange}\n            />\n            <Form.Text className=\"text-muted\"></Form.Text>\n          </Form.Group>\n\n          <Row>\n            <Button className=\"button\" variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n          </Row>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          {success && <Alert variant=\"success\">{success}</Alert>}\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Post;\n","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/Comments.js",[],[],"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/Comment.js",[],[],"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/data/repository.js",[],[],{"ruleId":"120","severity":1,"message":"121","line":1,"column":28,"nodeType":"122","messageId":"123","endLine":1,"endColumn":37},{"ruleId":"120","severity":1,"message":"124","line":73,"column":15,"nodeType":"122","messageId":"123","endLine":73,"endColumn":22},{"ruleId":"120","severity":1,"message":"125","line":1,"column":10,"nodeType":"122","messageId":"123","endLine":1,"endColumn":18},{"ruleId":"120","severity":1,"message":"126","line":13,"column":9,"nodeType":"122","messageId":"123","endLine":13,"endColumn":17},{"ruleId":"120","severity":1,"message":"126","line":30,"column":9,"nodeType":"122","messageId":"123","endLine":30,"endColumn":17},{"ruleId":"127","severity":1,"message":"128","line":39,"column":6,"nodeType":"129","endLine":39,"endColumn":13,"suggestions":"130"},{"ruleId":"127","severity":1,"message":"131","line":31,"column":6,"nodeType":"129","endLine":31,"endColumn":8,"suggestions":"132"},{"ruleId":"127","severity":1,"message":"131","line":15,"column":8,"nodeType":"129","endLine":15,"endColumn":10,"suggestions":"133"},{"ruleId":"120","severity":1,"message":"134","line":18,"column":19,"nodeType":"122","messageId":"123","endLine":18,"endColumn":27},{"ruleId":"120","severity":1,"message":"135","line":23,"column":19,"nodeType":"122","messageId":"123","endLine":23,"endColumn":29},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'newUser' is assigned a value but never used.","'useState' is defined but never used.","'navigate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'comments' and 'posts'. Either include them or remove the dependency array.","ArrayExpression",["136"],"React Hook useEffect has missing dependencies: 'navigate' and 'props.login'. Either include them or remove the dependency array.",["137"],["138"],"'setPosts' is assigned a value but never used.","'setSuccess' is assigned a value but never used.",{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"141","fix":"143"},"Update the dependencies array to be: [comments, posts, users]",{"range":"144","text":"145"},"Update the dependencies array to be: [navigate, props.login]",{"range":"146","text":"147"},{"range":"148","text":"147"},[967,974],"[comments, posts, users]",[899,901],"[navigate, props.login]",[336,338]]