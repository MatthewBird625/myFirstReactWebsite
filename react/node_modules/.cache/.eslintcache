[{"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/index.js":"1","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/App.js":"2","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/reportWebVitals.js":"3","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/NavBarComponent.js":"4","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/Profile.js":"5","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/RegisterForm.js":"6","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/LoginMenu.js":"7","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/LoginForm.js":"8","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/ProfileEdit.js":"9","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/PasswordEdit.js":"10","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/DeleteUser.js":"11","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/pages/PostPage.js":"12","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/pages/LandingPage.js":"13","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/pages/Feed.js":"14","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/pages/ProfilePage.js":"15","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/EmployeeReminder.js":"16","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/Post.js":"17","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/Comments.js":"18","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/data/repository.js":"19"},{"size":535,"mtime":1660264698028,"results":"20","hashOfConfig":"21"},{"size":3910,"mtime":1665556869089,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1660264698028,"results":"23","hashOfConfig":"21"},{"size":1030,"mtime":1661581853895,"results":"24","hashOfConfig":"21"},{"size":2422,"mtime":1665623037212,"results":"25","hashOfConfig":"21"},{"size":4742,"mtime":1665621629337,"results":"26","hashOfConfig":"21"},{"size":1167,"mtime":1665030067648,"results":"27","hashOfConfig":"21"},{"size":3517,"mtime":1665464039554,"results":"28","hashOfConfig":"21"},{"size":3204,"mtime":1665623508418,"results":"29","hashOfConfig":"21"},{"size":3666,"mtime":1665371567015,"results":"30","hashOfConfig":"21"},{"size":1176,"mtime":1665372432723,"results":"31","hashOfConfig":"21"},{"size":4164,"mtime":1665384950260,"results":"32","hashOfConfig":"21"},{"size":902,"mtime":1664946262309,"results":"33","hashOfConfig":"21"},{"size":2286,"mtime":1665544073151,"results":"34","hashOfConfig":"21"},{"size":939,"mtime":1664946273813,"results":"35","hashOfConfig":"21"},{"size":447,"mtime":1661147978907,"results":"36","hashOfConfig":"21"},{"size":2990,"mtime":1665557549004,"results":"37","hashOfConfig":"21"},{"size":992,"mtime":1665557309942,"results":"38","hashOfConfig":"21"},{"size":2668,"mtime":1665541527370,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"1bs2xwk",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"43"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"43"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"43"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"43"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"43"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"43"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/index.js",[],[],[],"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/App.js",[],[],"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/reportWebVitals.js",[],[],"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/NavBarComponent.js",[],[],"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/Profile.js",[],[],"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/RegisterForm.js",["104"],[],"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/LoginMenu.js",["105"],[],"import { useState } from \"react\";\nimport { Button, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"../Assets/CSS/Button.css\";\nconst Login = (props) => {\n  return (\n    <div>\n      {props.loginStatus !== true && (\n        <div>\n          <h1>sign in to continue</h1>\n          <p className=\"mt-4\">\n            {\" \"}\n            company policy requires that all content is to be only accessed by\n            registered members!\n          </p>\n          <Row>\n            <Col>\n              <Link to=\"/loginForm\">\n                <Button className=\"mx-1 my-2 button-bigger\"> Login</Button>\n              </Link>\n            </Col>\n            <Col>\n              <Link to=\"/register\">\n                {\" \"}\n                <Button className=\"mx-1 my-2 button-bigger\" variant=\"secondary\">\n                  Register\n                </Button>\n              </Link>\n            </Col>\n          </Row>\n        </div>\n      )}\n      {props.loginStatus === true && (\n        <div>\n          <h1>Welcome...</h1>\n          <p class=\"mt-4\">{localStorage.getItem(\"name\")}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Login;\n","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/LoginForm.js",["106"],[],"import { useRef, useState } from \"react\";\nimport { Form, Button, Row, Col, Alert } from \"react-bootstrap\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { verifyUser, setUser } from \"../data/repository\";\n\nimport \"../Assets/CSS/Button.css\";\nconst LoginForm = (props) => {\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const [error, setError] = useState(\"\");\n\n  const navigate = useNavigate();\n\n  const emailRef = useRef(null);\n  const passRef = useRef(null);\n\n  const handleChange = (field) => (event) => {\n    setUser((user) => ({ ...user, [field]: event.target.value }));\n  };\n\n  //   email regex from : https://emailregex.com/\n  const EMAIL_REGEX =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  //   password regex from: https://www.thepolyglotdeveloper.com/2015/05/use-regex-to-test-password-strength-in-javascript/\n  const PASS_REGEX = new RegExp(\n    \"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,20})\"\n  );\n\n  const logInUser = (email) => {\n    props.setLogin(true);\n    props.logInUser(email);\n    console.log(\"loggin in!\");\n    setUser(email);\n    navigate(\"/profile\");\n  };\n\n  const handleSubmit = async (e) => {\n    setError(\"\");\n\n    e.preventDefault();\n    if (!EMAIL_REGEX.test(user.email)) {\n      setError(\"incorrect email format!\");\n      emailRef.current.focus();\n      return;\n    }\n\n    if (!PASS_REGEX.test(user.password)) {\n      passRef.current.focus();\n      setError(\n        \"password must be between 8 to 20 characters, contain at least one numeric digit, one special character, one uppercase and one lowercase letter\"\n      );\n      return;\n    }\n    const userExists = await verifyUser(user.email, user.password);\n    if (userExists !== null) {\n      try {\n        logInUser(user.email);\n      } catch {\n        setError(\"unable to connect to the database\");\n      }\n    } else {\n      setError(\"incorrect username or password!\");\n    }\n  };\n\n  return (\n    <div>\n      {\" \"}\n      <Form onSubmit={handleSubmit}>\n        <Form.Group\n          className=\"mb-3\"\n          controlId=\"formBasicEmail\"\n          value={user.email}\n          onChange={handleChange(\"email\")}\n        >\n          <Form.Label>Email address</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"email@email.com\"\n            ref={emailRef}\n          />\n          <Form.Text className=\"text-muted\"></Form.Text>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            value={user.password}\n            onChange={handleChange(\"password\")}\n            ref={passRef}\n          />\n          <Form.Text className=\"text-muted\">\n            password must be at least 8 characters\n          </Form.Text>\n        </Form.Group>\n\n        <Row>\n          <Col>\n            <Button className=\"button-bigger\" variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n          </Col>\n          <Col>\n            <Link to=\"/\">\n              {\" \"}\n              <Button className=\"button-bigger\" variant=\"secondary\">\n                Back\n              </Button>\n            </Link>\n          </Col>\n        </Row>\n        {error && <Alert variant=\"danger\">{error}</Alert>}\n      </Form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/ProfileEdit.js",["107"],[],"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/PasswordEdit.js",["108","109"],[],"import { useState, useRef, useEffect } from \"react\";\n\nimport { Form, Row, Col, Button, Alert } from \"react-bootstrap\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { getUser, updatePassword } from \"../data/repository\";\n\nconst PasswordEdit = (props) => {\n  let user = getUser();\n\n  const [oldPass, setOldPass] = useState(\"\");\n  const [newPass, setNewPass] = useState(\"\");\n  const [newPassConfirm, setNewPassConfirm] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n\n  const oldPassRef = useRef(null);\n  const newPassRef = useRef(null);\n  const newPassConfirmRef = useRef(null);\n  const navigate = useNavigate();\n\n  //   password regex from: https://www.thepolyglotdeveloper.com/2015/05/use-regex-to-test-password-strength-in-javascript/\n\n  const PASS_REGEX = new RegExp(\n    \"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})\"\n  );\n  const handleSubmit = async (e) => {\n    setError(\"\");\n    setSuccess(\"\");\n\n    e.preventDefault();\n    if (!PASS_REGEX.test(oldPass)) {\n      setError(\"incorrect password format\");\n      oldPassRef.current.focus();\n      return;\n    }\n    if (!PASS_REGEX.test(newPass)) {\n      setError(\"incorrect password format\");\n      newPassRef.current.focus();\n      return;\n    }\n    if (!PASS_REGEX.test(newPassConfirm)) {\n      setError(\"incorrect password format\");\n      newPassConfirmRef.current.focus();\n      return;\n    }\n\n    if (newPass !== newPassConfirm) {\n      setError(\"new passwords don't match!\");\n      return;\n    }\n\n    const passwords = {\n      old: oldPass,\n      new: newPass,\n      userEmail: user.email,\n    };\n    const change = await updatePassword(passwords);\n    console.log(change.result);\n\n    if (change.result !== false) {\n      setSuccess(\"password changed!\");\n    } else {\n      setError(\"incorrect original password!\");\n    }\n  };\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <Form.Label>old Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            ref={oldPassRef}\n            value={oldPass}\n            onChange={(e) => setOldPass(e.target.value)}\n          />\n          <Form.Text className=\"text-muted\"></Form.Text>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n          <Form.Label>New Password</Form.Label>\n\n          <Form.Control\n            type=\"password\"\n            value={newPass}\n            onChange={(e) => setNewPass(e.target.value)}\n            ref={newPassRef}\n          />\n          <Form.Text className=\"text-muted\"></Form.Text>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n          <Form.Label>New Password</Form.Label>\n\n          <Form.Control\n            type=\"password\"\n            value={newPassConfirm}\n            onChange={(e) => setNewPassConfirm(e.target.value)}\n            ref={newPassConfirmRef}\n          />\n          <Form.Text className=\"text-muted\"></Form.Text>\n        </Form.Group>\n\n        <Row>\n          <Col>\n            <Button className=\"button-bigger\" variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n          </Col>\n          <Col>\n            <Link to=\"/profile\">\n              {\" \"}\n              <Button className=\"button-bigger\" variant=\"secondary\">\n                Back\n              </Button>\n            </Link>\n          </Col>\n        </Row>\n        {error && <Alert variant=\"danger\">{error}</Alert>}\n        {success && <Alert variant=\"success\">{success}</Alert>}\n      </Form>\n    </div>\n  );\n};\n\nexport default PasswordEdit;\n","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/DeleteUser.js",["110"],[],"import { Form, Row, Col, Button } from \"react-bootstrap\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { deleteUser, getUser } from \"../data/repository\";\n\nconst DeleteUser = (props) => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (props.loginStatus !== true) {\n      navigate(\"/\");\n    }\n  });\n\n  const [user, setUser] = useState(getUser());\n\n  const handleSubmit = () => {\n    deleteUser(user);\n    props.setLogin(false);\n    props.logInUser(\"\");\n    alert(\"account deleted!\");\n\n    return;\n  };\n\n  return (\n    <div>\n      <h2>are you sure you want to delete {props.currentUser}'s account?</h2>\n      <Form onSubmit={handleSubmit}>\n        <Row>\n          <Col>\n            <Button className=\"button-bigger\" variant=\"primary\" type=\"submit\">\n              Yes\n            </Button>\n          </Col>\n          <Col>\n            <Link to=\"/profile\">\n              {\" \"}\n              <Button className=\"button-bigger\" variant=\"secondary\">\n                Back\n              </Button>\n            </Link>\n          </Col>\n        </Row>\n      </Form>\n    </div>\n  );\n};\n\nexport default DeleteUser;\n","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/pages/PostPage.js",["111"],[],"import { Container, Row, Col, Form, Button, Alert } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nimport { useNavigate } from \"react-router-dom\";\n\nimport \"../Assets/CSS/Button.css\";\nimport \"../Assets/CSS/PostPage.css\";\nimport \"../Assets/CSS/view.css\";\nimport { useRef, useState, useEffect } from \"react\";\nimport { getUser, createPost } from \"../data/repository\";\n\nconst PostPage = (props) => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (props.login !== true) {\n      navigate(\"/\");\n    }\n  }, []);\n\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const contentRef = useRef(null);\n\n  const [imageUpload, setImageUpload] = useState(null);\n  const [form, setForm] = useState({\n    content: \"\",\n    email: getUser().email,\n  });\n\n  // handle change and handleSubmit is based off the solution presented in the RMIT FWP WEEK 5 LAB with some modifications\n  const handleChange = (field) => (event) => {\n    setForm((form) => ({ ...form, [field]: event.target.value }));\n\n    setSuccess(\"\");\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setSuccess(\"\");\n    setError(\"\");\n\n    if (form.content.length < 1 || form.content.length > 250) {\n      setError(\"content must be between 1 and 250 characters\");\n      return;\n    }\n    createPost(form);\n    setSuccess(\"post created!\");\n  };\n\n  return (\n    <Container fluid>\n      <Row className=\"min-view post\">\n        <Col></Col>\n        <Col sm={8} md={6}>\n          {/* Dummy placeg=holder for now- TODO replace with company logo */}\n          <h1 className=\"heading\">Make a Post</h1>\n          {imageUpload && (\n            <div>\n              <img\n                className=\"post-image\"\n                alt=\"not fount\"\n                src={URL.createObjectURL(imageUpload)}\n              />\n              <br />\n              <Button\n                className=\"image-button\"\n                variant=\"secondary\"\n                onClick={() => setImageUpload(null)}\n              >\n                Remove\n              </Button>\n            </div>\n          )}\n\n          <Form onSubmit={handleSubmit}>\n            <Form.Group\n              className=\"mb-3\"\n              controlId=\"formBasicontent\"\n              value={form.content}\n              onChange={handleChange(\"content\")}\n            >\n              <Form.Label></Form.Label>\n              <Form.Control\n                type=\"file\"\n                name=\"myImage\"\n                multiple\n                accept=\"image/*\"\n                onChange={(event) => {\n                  setImageUpload(event.target.files[0]);\n                }}\n              />\n              <Form.Text className=\"text-muted\">upload image</Form.Text>\n            </Form.Group>\n            <Form.Group\n              className=\"mb-3\"\n              controlId=\"formBasicontent\"\n              value={form.content}\n              onChange={handleChange(\"content\")}\n            >\n              <Form.Label></Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                rows=\"5\"\n                type=\"text\"\n                placeholder=\"\"\n                ref={contentRef}\n              />\n              <Form.Text className=\"text-muted\"></Form.Text>\n            </Form.Group>\n\n            <Row>\n              <Col>\n                <Button\n                  className=\"button-bigger\"\n                  variant=\"primary\"\n                  type=\"submit\"\n                >\n                  Submit\n                </Button>\n              </Col>\n              <Col>\n                <Link to=\"/\">\n                  {\" \"}\n                  <Button className=\"button-bigger\" variant=\"secondary\">\n                    Back\n                  </Button>\n                </Link>\n              </Col>\n            </Row>\n            {error && <Alert variant=\"danger\">{error}</Alert>}\n            {success && <Alert variant=\"success\">{success}</Alert>}\n          </Form>\n          {/* image generated from https://smashinglogo.com/ and used for non for profit educational purposes */}\n        </Col>\n        <Col></Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default PostPage;\n","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/pages/LandingPage.js",[],[],"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/pages/Feed.js",["112","113","114"],[],"import { useState, useEffect } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport Post from \"../components/Post\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getPosts } from \"../data/repository\";\n\nconst Feed = (props) => {\n  const navigate = useNavigate();\n  const [posts, setPosts] = useState(\"\");\n  const [isLoadingPosts, setIsLoadingPosts] = useState(true);\n  const [reload, setReload] = useState(false);\n\n  useEffect(() => {\n    if (props.login !== true) {\n      navigate(\"/\");\n    }\n  }, []);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const result = await getPosts();\n\n      setPosts(result);\n      setIsLoadingPosts(false);\n    };\n    fetchPosts().catch(console.error);\n    console.log(\"loading posts\");\n  }, [isLoadingPosts]);\n\n  const [comments, setComments] = useState(\n    localStorage.getItem(\"comments\")\n      ? JSON.parse(localStorage.getItem(\"comments\"))\n      : []\n  );\n\n  //temporary front end PK generator for posts until back end is implemented\n  const [postCount, setPostCount] = useState(\n    localStorage.getItem(\"postCount\")\n      ? JSON.parse(localStorage.getItem(\"postCount\"))\n      : 0\n  );\n  const reloadThePostsData = () => {\n    console.log(\"TOGGLE\");\n    if (isLoadingPosts === false) {\n      setIsLoadingPosts(true);\n    } else {\n      setIsLoadingPosts(false);\n    }\n  };\n  return (\n    <div>\n      <Row>\n        <Col></Col>\n        {/* CENTER COLUMN */}\n        <Col sm={10} md={8}>\n          <h1>Your feed:</h1>\n          {/* loading control logic below is based on lab08- registration and login example forum file */}\n          {isLoadingPosts ? (\n            <div>Loading posts...</div>\n          ) : posts.length === 0 ? (\n            <span className=\"text-muted\">No posts have been submitted.</span>\n          ) : (\n            posts.map((post) => (\n              <Post\n                setPostCount={setPostCount}\n                postCount={postCount}\n                postData={post}\n                comments={comments}\n                setComments={setComments}\n                currentUser={props.currentUser}\n                reloadThePostsData={reloadThePostsData}\n              />\n            ))\n          )}\n        </Col>\n        <Col></Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default Feed;\n","/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/pages/ProfilePage.js",[],[],"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/EmployeeReminder.js",[],[],"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/Post.js",["115"],[],"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/components/Comments.js",["116"],[],"/home/matthew/Desktop/UNI/further-web-programming/A1/3482450/react/src/data/repository.js",[],[],{"ruleId":"117","severity":1,"message":"118","line":82,"column":15,"nodeType":"119","messageId":"120","endLine":82,"endColumn":22},{"ruleId":"117","severity":1,"message":"121","line":1,"column":10,"nodeType":"119","messageId":"120","endLine":1,"endColumn":18},{"ruleId":"117","severity":1,"message":"122","line":4,"column":22,"nodeType":"119","messageId":"120","endLine":4,"endColumn":29},{"ruleId":"117","severity":1,"message":"123","line":18,"column":9,"nodeType":"119","messageId":"120","endLine":18,"endColumn":17},{"ruleId":"117","severity":1,"message":"124","line":1,"column":28,"nodeType":"119","messageId":"120","endLine":1,"endColumn":37},{"ruleId":"117","severity":1,"message":"123","line":19,"column":9,"nodeType":"119","messageId":"120","endLine":19,"endColumn":17},{"ruleId":"117","severity":1,"message":"125","line":15,"column":16,"nodeType":"119","messageId":"120","endLine":15,"endColumn":23},{"ruleId":"126","severity":1,"message":"127","line":19,"column":6,"nodeType":"128","endLine":19,"endColumn":8,"suggestions":"129"},{"ruleId":"117","severity":1,"message":"130","line":11,"column":10,"nodeType":"119","messageId":"120","endLine":11,"endColumn":16},{"ruleId":"117","severity":1,"message":"131","line":11,"column":18,"nodeType":"119","messageId":"120","endLine":11,"endColumn":27},{"ruleId":"126","severity":1,"message":"127","line":17,"column":6,"nodeType":"128","endLine":17,"endColumn":8,"suggestions":"132"},{"ruleId":"117","severity":1,"message":"124","line":1,"column":28,"nodeType":"119","messageId":"120","endLine":1,"endColumn":37},{"ruleId":"126","severity":1,"message":"133","line":19,"column":6,"nodeType":"128","endLine":19,"endColumn":20,"suggestions":"134"},"no-unused-vars","'newUser' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'setUser' is defined but never used.","'navigate' is assigned a value but never used.","'useEffect' is defined but never used.","'setUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'navigate' and 'props.login'. Either include them or remove the dependency array.","ArrayExpression",["135"],"'reload' is assigned a value but never used.","'setReload' is assigned a value but never used.",["136"],"React Hook useEffect has a missing dependency: 'props.postId'. Either include it or remove the dependency array.",["137"],{"desc":"138","fix":"139"},{"desc":"138","fix":"140"},{"desc":"141","fix":"142"},"Update the dependencies array to be: [navigate, props.login]",{"range":"143","text":"144"},{"range":"145","text":"144"},"Update the dependencies array to be: [props.postId, props.reload]",{"range":"146","text":"147"},[533,535],"[navigate, props.login]",[520,522],[568,582],"[props.postId, props.reload]"]